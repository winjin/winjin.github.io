<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JavaScript Note</title>
    <url>/2020/04/19/JavaScript-Note/</url>
    <content><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="JavaScript-简介"><a href="#JavaScript-简介" class="headerlink" title="JavaScript 简介"></a>JavaScript 简介</h2><p>JavaScript 是解释型脚本语言。区分大小写。在 ## JavaScript 中一切都是对象。数字(Number)、字符串(String)、数组(Array)、日期(Date)，布尔(Boolean)，算数(Math)，正则(RegExp)<br>JavaScript 定义了 5 种原始数据类型：string，number，boolean，null，undefined</p>
<h2 id="JavaScript-循环"><a href="#JavaScript-循环" class="headerlink" title="JavaScript 循环"></a>JavaScript 循环</h2><ul>
<li>for - 循环代码块一定的次数</li>
<li>for/in - 循环遍历对象的属性</li>
<li>while - 当指定的条件为 true 时循环指定的代码块</li>
<li>do/while - 同样当指定的条件为 true 时循环指定的代码块</li>
</ul>
<p>break 语句用于跳出循环。continue 用于跳过循环中的一个迭代。</p>
<h2 id="JavaScript-错误"><a href="#JavaScript-错误" class="headerlink" title="JavaScript 错误"></a>JavaScript 错误</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">	&#x2F;&#x2F; test code </span><br><span class="line">&#125; catch &#123;</span><br><span class="line">	&#x2F;&#x2F; throw a Exception</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="JavaScript-对象"><a href="#JavaScript-对象" class="headerlink" title="JavaScript 对象"></a>JavaScript 对象</h2><p>JavaScript 基于 prototype 的，而不是基于类的，绝不会存在类，也不会通过类来创建对象。</p>
<h3 id="Number-对象"><a href="#Number-对象" class="headerlink" title="Number 对象"></a>Number 对象</h3><p>Number 对象都是64位的。没有数字类型区分。浮点数是不精确的。NaN 是非数字值的特殊值。该属性用于指示某个值不是数字。可用 isNaN() 来判断一个值是否是 NaN </p>
<p>常用属性：<br>constructor    返回对创建此对象的 Number 函数的引用。</p>
<p>常用方法：</p>
<ul>
<li>toString()    把数字转换为字符串，使用指定的基数。</li>
<li>valueOf()    返回一个 Number 对象的基本数字值。</li>
</ul>
<h3 id="String-对象"><a href="#String-对象" class="headerlink" title="String 对象"></a>String 对象</h3><p>常用属性：<br>length        字符串的长度</p>
<p>常用方法：</p>
<ul>
<li>charAt()    返回在指定位置的字符。</li>
<li>charCodeAt()    返回在指定的位置的字符的 Unicode 编码。</li>
<li>concat()    连接字符串。</li>
<li>indexOf()    检索字符串。</li>
<li>lastIndexOf()    从后向前搜索字符串。</li>
<li>match()    找到一个或多个正则表达式的匹配。</li>
<li>replace()    替换与正则表达式匹配的子串。</li>
<li>search()    检索与正则表达式相匹配的值。</li>
<li>slice()    提取字符串的片断，并在新的字符串中返回被提取的部分。</li>
<li>split()    把字符串分割为字符串数组。</li>
<li>substr()    从起始索引号提取字符串中指定数目的字符。</li>
<li>substring()    提取字符串中两个指定的索引号之间的字符。</li>
<li>toLowerCase()    把字符串转换为小写。</li>
<li>toUpperCase()    把字符串转换为大写。</li>
<li>toString()    返回字符串。</li>
<li>valueOf()    返回某个字符串对象的原始值。</li>
</ul>
<h3 id="Array-对象"><a href="#Array-对象" class="headerlink" title="Array 对象"></a>Array 对象</h3><p>常用属性：</p>
<ul>
<li>constructor    返回对创建此对象的数组函数的引用。</li>
<li>length    设置或返回数组中元素的数目。</li>
<li>prototype    使您有能力向对象添加属性和方法。</li>
</ul>
<p>常用方法：</p>
<ul>
<li>concat()    连接两个或更多的数组，并返回结果。</li>
<li>join()    把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。</li>
<li>pop()    删除并返回数组的最后一个元素</li>
<li>push()    向数组的末尾添加一个或更多元素，并返回新的长度。</li>
<li>reverse()    颠倒数组中元素的顺序。</li>
<li>shift()    删除并返回数组的第一个元素</li>
<li>slice()    从某个已有的数组返回选定的元素</li>
<li>sort()    对数组的元素进行排序</li>
<li>splice()    删除元素，并向数组添加新元素。</li>
<li>toSource()    返回该对象的源代码。</li>
<li>toString()    把数组转换为字符串，并返回结果。</li>
<li>toLocaleString()    把数组转换为本地数组，并返回结果。</li>
<li>unshift()    向数组的开头添加一个或更多元素，并返回新的长度。</li>
<li>valueOf()    返回数组对象的原始值</li>
</ul>
<h3 id="Date-对象"><a href="#Date-对象" class="headerlink" title="Date 对象"></a>Date 对象</h3><p>常用属性：</p>
<ul>
<li>constructor    返回对创建此对象的 Date 函数的引用。</li>
<li>prototype    使您有能力向对象添加属性和方法。</li>
</ul>
<p>常用方法：</p>
<ul>
<li><p>Date()    返回当日的日期和时间。</p>
</li>
<li><p>getDate()    从 Date 对象返回一个月中的某一天 (1 ~ 31)。</p>
</li>
<li><p>getDay()    从 Date 对象返回一周中的某一天 (0 ~ 6)。</p>
</li>
<li><p>getMonth()    从 Date 对象返回月份 (0 ~ 11)。</p>
</li>
<li><p>getFullYear()    从 Date 对象以四位数字返回年份。</p>
</li>
<li><p>getSeconds()    返回 Date 对象的秒数 (0 ~ 59)。</p>
</li>
<li><p>getMilliseconds()    返回 Date 对象的毫秒(0 ~ 999)。</p>
</li>
<li><p>getTime()    返回 1970 年 1 月 1 日至今的毫秒数。</p>
</li>
<li><p>parse()    返回1970年1月1日午夜到指定日期（字符串）的毫秒数。</p>
</li>
<li><p>setDate()    设置 Date 对象中月的某一天 (1 ~ 31)。</p>
</li>
<li><p>setMonth()    设置 Date 对象中月份 (0 ~ 11)。</p>
</li>
<li><p>setFullYear()    设置 Date 对象中的年份（四位数字）。</p>
</li>
<li><p>toString()    把 Date 对象转换为字符串。</p>
</li>
<li><p>toTimeString()    把 Date 对象的时间部分转换为字符串。</p>
</li>
<li><p>toDateString()    把 Date 对象的日期部分转换为字符串。</p>
</li>
<li><p>toLocaleString()    根据本地时间格式，把 Date 对象转换为字符串。</p>
</li>
<li><p>valueOf()    返回 Date 对象的原始值。</p>
</li>
</ul>
<h3 id="Boolean-对象"><a href="#Boolean-对象" class="headerlink" title="Boolean 对象"></a>Boolean 对象</h3><p>Boolean 对象只有两个值：”true” 或 “false”。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new Boolean(value);	&#x2F;&#x2F; 当作为一个构造函数（带 new）调用时，它将把它的参数转换成一个布尔值，并返回一个包含该值的 Boolean 对象。</span><br><span class="line">Boolean(value);		&#x2F;&#x2F; 作为函数（不带 new）调用时，Boolean() 只把它的参数转换成一个原始的布尔值，并返回这个值。</span><br></pre></td></tr></table></figure>
<p>如果省略 value 参数，或者设置为 0、-0、null、””、false、undefined 或 NaN，则该对象设置为 false。否则设置为 true（即使 value 参数是字符串 “false”）。</p>
<p>常用属性：</p>
<p>常用方法：<br>toString()    把逻辑值转换为字符串，并返回结果。<br>valueOf()    返回 Boolean 对象的原始值。</p>
<h3 id="Math-对象"><a href="#Math-对象" class="headerlink" title="Math 对象"></a>Math 对象</h3><p>Math 对象没有构造函数属性。</p>
<p>常用属性：</p>
<ul>
<li>E    返回算术常量 e，即自然对数的底数（约等于2.718）。</li>
<li>LN2    返回 2 的自然对数（约等于0.693）。</li>
<li>LN10    返回 10 的自然对数（约等于2.302）。</li>
<li>LOG2E    返回以 2 为底的 e 的对数（约等于 1.414）。</li>
<li>LOG10E    返回以 10 为底的 e 的对数（约等于0.434）。</li>
<li>PI    返回圆周率（约等于3.14159）。</li>
<li>SQRT1_2    返回返回 2 的平方根的倒数（约等于 0.707）。</li>
<li>SQRT2    返回 2 的平方根（约等于 1.414）。</li>
</ul>
<p>常用方法：</p>
<ul>
<li>abs(x)    返回数的绝对值。</li>
<li>acos(x)    返回数的反余弦值。</li>
<li>asin(x)    返回数的反正弦值。</li>
<li>atan(x)    以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。</li>
<li>atan2(y,x)    返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。</li>
<li>ceil(x)    对数进行上舍入。</li>
<li>cos(x)    返回数的余弦。</li>
<li>exp(x)    返回 e 的指数。</li>
<li>floor(x)    对数进行下舍入。</li>
<li>log(x)    返回数的自然对数（底为e）。</li>
<li>max(x,y)    返回 x 和 y 中的最高值。</li>
<li>min(x,y)    返回 x 和 y 中的最低值。</li>
<li>pow(x,y)    返回 x 的 y 次幂。</li>
<li>random()    返回 0 ~ 1 之间的随机数。</li>
<li>round(x)    把数四舍五入为最接近的整数。</li>
<li>sin(x)    返回数的正弦。</li>
<li>sqrt(x)    返回数的平方根。</li>
<li>tan(x)    返回角的正切。</li>
<li>toSource()    返回该对象的源代码。</li>
<li>valueOf()    返回 Math 对象的原始值。</li>
</ul>
<h3 id="RegExp-对象"><a href="#RegExp-对象" class="headerlink" title="RegExp 对象"></a>RegExp 对象</h3><p>修饰符<br>i    执行对大小写不敏感的匹配。<br>g    执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。<br>m    执行多行匹配。</p>
<p>方括号范围<br>[abc]    查找方括号之间的任何字符。<br>[^abc]    查找任何不在方括号之间的字符。<br>[0-9]    查找任何从 0 至 9 的数字。<br>[a-z]    查找任何从小写 a 到小写 z 的字符。<br>[A-Z]    查找任何从大写 A 到大写 Z 的字符。<br>[A-z]    查找任何从大写 A 到小写 z 的字符。<br>[adgk]    查找给定集合内的任何字符。<br>[^adgk]    查找给定集合外的任何字符。<br>(red|blue|green)    查找任何指定的选项。</p>
<p>元字符</p>
<p>.    查找单个字符，除了换行和行结束符。<br>\w    查找单词字符。<br>\W    查找非单词字符。<br>\d    查找数字。<br>\D    查找非数字字符。<br>\s    查找空白字符。<br>\S    查找非空白字符。<br>\b    匹配单词边界。<br>\B    匹配非单词边界。<br>\0    查找 NUL 字符。<br>\n    查找换行符。<br>\f    查找换页符。<br>\r    查找回车符。<br>\t    查找制表符。<br>\v    查找垂直制表符。<br>\xxx    查找以八进制数 xxx 规定的字符。<br>\xdd    查找以十六进制数 dd 规定的字符。<br>\uxxxx    查找以十六进制数 xxxx 规定的 Unicode 字符。</p>
<p>量词<br>n+    匹配任何包含至少一个 n 的字符串。<br>n*    匹配任何包含零个或多个 n 的字符串。<br>n?    匹配任何包含零个或一个 n 的字符串。<br>n{X}    匹配包含 X 个 n 的序列的字符串。<br>n{X,Y}    匹配包含 X 至 Y 个 n 的序列的字符串。<br>n{X,}    匹配包含至少 X 个 n 的序列的字符串。<br>n$    匹配任何结尾为 n 的字符串。<br>^n    匹配任何开头为 n 的字符串。<br>?=n    匹配任何其后紧接指定字符串 n 的字符串。<br>?!n    匹配任何其后没有紧接指定字符串 n 的字符串。</p>
<h3 id="全局对象"><a href="#全局对象" class="headerlink" title="全局对象"></a>全局对象</h3><p>全局对象的全局属性和函数可用于所有内建的 JavaScript 对象。</p>
<p>全局属性<br>Infinity    代表正的无穷大的数值。<br>java    代表 java.* 包层级的一个 JavaPackage。<br>NaN    指示某个值是不是数字值。<br>Packages    根 JavaPackage 对象。<br>undefined    指示未定义的值。</p>
<p>全局函数<br>decodeURI()    解码某个编码的 URI。<br>decodeURIComponent()    解码一个编码的 URI 组件。<br>encodeURI()    把字符串编码为 URI。<br>encodeURIComponent()    把字符串编码为 URI 组件。<br>escape()    对字符串进行编码。<br>eval()    计算 JavaScript 字符串，并把它作为脚本代码来执行。<br>getClass()    返回一个 JavaObject 的 JavaClass。<br>isFinite()    检查某个值是否为有穷大的数。<br>isNaN()    检查某个值是否是数字。<br>Number()    把对象的值转换为数字。<br>parseFloat()    解析一个字符串并返回一个浮点数。<br>parseInt()    解析一个字符串并返回一个整数。<br>String()    把对象的值转换为字符串。<br>unescape()    对由 escape() 编码的字符串进行解码。</p>
<h2 id="Window-对象"><a href="#Window-对象" class="headerlink" title="Window 对象"></a>Window 对象</h2><p>Window 对象属性</p>
<ul>
<li>closed    返回窗口是否已被关闭。</li>
<li>defaultStatus    设置或返回窗口状态栏中的默认文本。</li>
<li>document    对 Document 对象的只读引用。请参阅 Document 对象。</li>
<li>history    对 History 对象的只读引用。请参数 History 对象。</li>
<li>innerheight    返回窗口的文档显示区的高度。</li>
<li>innerwidth    返回窗口的文档显示区的宽度。</li>
<li>length    设置或返回窗口中的框架数量。</li>
<li>location    用于窗口或框架的 Location 对象。请参阅 Location 对象。</li>
<li>name    设置或返回窗口的名称。</li>
<li>Navigator    对 Navigator 对象的只读引用。请参数 Navigator 对象。</li>
<li>opener    返回对创建此窗口的窗口的引用。</li>
<li>outerheight    返回窗口的外部高度。</li>
<li>outerwidth    返回窗口的外部宽度。</li>
<li>pageXOffset    设置或返回当前页面相对于窗口显示区左上角的 X 位置。</li>
<li>pageYOffset    设置或返回当前页面相对于窗口显示区左上角的 Y 位置。</li>
<li>parent    返回父窗口。</li>
<li>Screen    对 Screen 对象的只读引用。请参数 Screen 对象。</li>
<li>self    返回对当前窗口的引用。等价于 Window 属性。</li>
<li>status    设置窗口状态栏的文本。</li>
<li>top    返回最顶层的先辈窗口。</li>
<li>window    window 属性等价于 self 属性，它包含了对窗口自身的引用。</li>
<li>screenLeft  screenTop  screenX  screenY  只读整数。声明了窗口的左上角在屏幕上的的 x 坐标和 y 坐标。IE、Safari 和 Opera 支持 screenLeft 和 screenTop，而 Firefox 和 Safari 支持 screenX 和 screenY。</li>
</ul>
<p>Window 对象方法</p>
<p>Window 对象和 Navigator 、Screen，history，Location 对象， 都是 Brower 对象。<br>还有 DOM Document， DOM Element， DOM Attribute, DOM Event 都是 HTML DOM 对象。</p>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery Note</title>
    <url>/2020/04/19/jQuery-Note/</url>
    <content><![CDATA[<h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><h2 id="jQuery-简介"><a href="#jQuery-简介" class="headerlink" title="jQuery 简介"></a>jQuery 简介</h2><p>jQuery 是一个 js 库。使用 script 标签引入 html 文档。使用方式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(document).ready(function()&#123;</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F; jQuery methods go here...</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">或者</span><br><span class="line">$(function()&#123;</span><br><span class="line"></span><br><span class="line">   &#x2F;&#x2F; jQuery methods go here...</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="jQuery-HTML"><a href="#jQuery-HTML" class="headerlink" title="jQuery HTML"></a>jQuery HTML</h2><h3 id="用于获取-设置-DOM-内容或属性的-jQuery-方法："><a href="#用于获取-设置-DOM-内容或属性的-jQuery-方法：" class="headerlink" title="用于获取/设置 DOM 内容或属性的 jQuery 方法："></a>用于获取/设置 DOM 内容或属性的 jQuery 方法：</h3><p>text() - 设置或返回所选元素的文本内容<br>html() - 设置或返回所选元素的内容（包括 HTML 标记）<br>val() - 设置或返回表单字段的值<br>attr() - 方法用于设置或获取属性值。</p>
<h3 id="用于添加新内容的四个-jQuery-方法："><a href="#用于添加新内容的四个-jQuery-方法：" class="headerlink" title="用于添加新内容的四个 jQuery 方法："></a>用于添加新内容的四个 jQuery 方法：</h3><ul>
<li>append() - 在被选元素的结尾插入内容</li>
<li>prepend() - 在被选元素的开头插入内容</li>
<li>after() - 在被选元素之后插入内容</li>
<li>before() - 在被选元素之前插入内容</li>
</ul>
<h3 id="删除元素和内容的-jQuery-方法："><a href="#删除元素和内容的-jQuery-方法：" class="headerlink" title="删除元素和内容的 jQuery 方法："></a>删除元素和内容的 jQuery 方法：</h3><ul>
<li>remove() - 删除被选元素（及其子元素）</li>
<li>empty() - 从被选元素中删除子元素</li>
</ul>
<h3 id="操作-css-的-jQuery-方法："><a href="#操作-css-的-jQuery-方法：" class="headerlink" title="操作 css 的 jQuery 方法："></a>操作 css 的 jQuery 方法：</h3><ul>
<li>addClass()          向被选元素添加一个或多个类</li>
<li>removeClass()      从被选元素删除一个或多个类</li>
<li>toggleClass()      对被选元素进行添加/删除类的切换操作</li>
<li>css()         设置或返回样式属性</li>
</ul>
<h3 id="处理尺寸的-jQuery-方法："><a href="#处理尺寸的-jQuery-方法：" class="headerlink" title="处理尺寸的 jQuery 方法："></a>处理尺寸的 jQuery 方法：</h3><ul>
<li>width()    设置或返回元素的宽度（不包括内边距、边框或外边距）</li>
<li>height()    设置或返回元素的高度（不包括内边距、边框或外边距）</li>
<li>innerWidth()    返回元素的宽度（包括内边距）</li>
<li>innerHeight()    返回元素的高度（包括内边距）</li>
<li>outerWidth()    返回元素的宽度（包括内边距和边框）</li>
<li>outerHeight()    返回元素的高度（包括内边距和边框）</li>
</ul>
<h3 id="jQuery-遍历祖先的方法："><a href="#jQuery-遍历祖先的方法：" class="headerlink" title="jQuery 遍历祖先的方法："></a>jQuery 遍历祖先的方法：</h3><ul>
<li>parent()        返回被选元素的直接父元素。返回的是个集合，如果被选元素有多个，那么返回的集合中也有多个。</li>
<li>parents()        返回被选元素的所有祖先元素，它一路向上直到文档的根元素 (<html>)。</li>
<li>parentsUntil()    返回介于两个给定元素之间的所有祖先元素。</li>
</ul>
<h3 id="jQuery-遍历后代的方法："><a href="#jQuery-遍历后代的方法：" class="headerlink" title="jQuery 遍历后代的方法："></a>jQuery 遍历后代的方法：</h3><ul>
<li>children()    返回被选元素的所有直接子元素。</li>
<li>child()        返回被选元素的后代元素，一路向下直到最后一个后代。</li>
<li>find()</li>
</ul>
<h3 id="jQuery-遍历同胞的方法："><a href="#jQuery-遍历同胞的方法：" class="headerlink" title="jQuery 遍历同胞的方法："></a>jQuery 遍历同胞的方法：</h3><ul>
<li>each()    为每个匹配元素执行函数</li>
<li>siblings()        返回被选元素的所有同胞元素。</li>
<li>prev()</li>
<li>prevAll()        </li>
<li>prevUntil()        </li>
<li>next()            </li>
<li>nextAll()        返回被选元素的所有跟随的同胞元素。</li>
<li>nextUntil()        返回介于两个给定参数之间的所有跟随的同胞元素。</li>
</ul>
<h3 id="jQuery-遍历给定范围的方法："><a href="#jQuery-遍历给定范围的方法：" class="headerlink" title="jQuery 遍历给定范围的方法："></a>jQuery 遍历给定范围的方法：</h3><ul>
<li><p>first()        返回被选元素的首个元素</p>
</li>
<li><p>last()        </p>
</li>
<li><p>eq()            返回被选元素中带有指定索引号的元素</p>
</li>
<li><p>not()         返回不匹配标准的所有元素</p>
</li>
</ul>
<h2 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h2><table>
    <tbody>
        <tr>
            <th>选择器</th>
            <th>实例</th>
            <th>选取</th>
        </tr>
        <tr>
            <td><a href="#">.<em>class,</em>.<em>class</em></a></td>
            <td>$(".intro,.demo")</td>
            <td>选取 class 为 "intro" 或 "demo" 的所有元素</td>
        </tr>
        <tr>
            <td><a href="#">:first</a></td>
            <td>$("p:first")</td>
            <td>第一个 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:last</a></td>
            <td>$("p:last")</td>
            <td>最后一个 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:even</a></td>
            <td>$("tr:even")</td>
            <td>所有偶数 &lt;tr&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:odd</a></td>
            <td>$("tr:odd")</td>
            <td>所有奇数 &lt;tr&gt; 元素</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td><a href="#">:first-child</a></td>
            <td>$("p:first-child")</td>
            <td>属于其父元素的第一个子元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:first-of-type</a></td>
            <td>$("p:first-of-type")</td>
            <td>属于其父元素的第一个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:last-child</a></td>
            <td>$("p:last-child")</td>
            <td>属于其父元素的最后一个子元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:last-of-type</a></td>
            <td>$("p:last-of-type")</td>
            <td>属于其父元素的最后一个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:nth-child(<em>n</em>)</a></td>
            <td>$("p:nth-child(2)")</td>
            <td>属于其父元素的第二个子元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:nth-last-child(<em>n</em>)</a></td>
            <td>$("p:nth-last-child(2)")</td>
            <td>属于其父元素的第二个子元素的所有 &lt;p&gt; 元素，从最后一个子元素开始计数</td>
        </tr>
        <tr>
            <td><a href="#">:nth-of-type(<em>n</em>)</a></td>
            <td>$("p:nth-of-type(2)")</td>
            <td>属于其父元素的第二个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:nth-last-of-type(<em>n</em>)</a></td>
            <td>$("p:nth-last-of-type(2)")</td>
            <td>属于其父元素的第二个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素，从最后一个子元素开始计数</td>
        </tr>
        <tr>
            <td><a href="#">:only-child</a></td>
            <td>$("p:only-child")</td>
            <td>属于其父元素的唯一子元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:only-of-type</a></td>
            <td>$("p:only-of-type")</td>
            <td>属于其父元素的特定类型的唯一子元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td><a href="#">parent &gt; child</a></td>
            <td>$("div &gt; p")</td>
            <td>&lt;div&gt; 元素的直接子元素的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">parent descendant</a></td>
            <td>$("div p")</td>
            <td>&lt;div&gt; 元素的后代的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">element + next</a></td>
            <td>$("div + p")</td>
            <td>每个 &lt;div&gt; 元素相邻的下一个 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">element ~ siblings</a></td>
            <td>$("div ~ p")</td>
            <td>&lt;div&gt; 元素同级的所有 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td><a href="#">:eq(<em>index</em>)</a></td>
            <td>$("ul li:eq(3)")</td>
            <td>列表中的第四个元素（index 值从 0 开始）</td>
        </tr>
        <tr>
            <td><a href="#">:gt(<em>no</em>)</a></td>
            <td>$("ul li:gt(3)")</td>
            <td>列举 index 大于 3 的元素</td>
        </tr>
        <tr>
            <td><a href="#">:lt(<em>no</em>)</a></td>
            <td>$("ul li:lt(3)")</td>
            <td>列举 index 小于 3 的元素</td>
        </tr>
        <tr>
            <td><a href="#">:not(<em>selector</em>)</a></td>
            <td>$("input:not(:empty)")</td>
            <td>所有不为空的输入元素</td>
        </tr>
        <tr>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td><a href="#">:header</a></td>
            <td>$(":header")</td>
            <td>所有标题元素 &lt;h1&gt;, &lt;h2&gt; ...</td>
        </tr>
        <tr>
            <td><a href="#">:animated</a></td>
            <td>$(":animated")</td>
            <td>所有动画元素</td>
        </tr>
        <tr>
            <td><a href="#">:focus</a></td>
            <td>$(":focus")</td>
            <td>当前具有焦点的元素</td>
        </tr>
        <tr>
            <td><a href="#">:contains(<em>text</em>)</a></td>
            <td>$(":contains('Hello')")</td>
            <td>所有包含文本 "Hello" 的元素</td>
        </tr>
        <tr>
            <td><a href="#">:has(<em>selector</em>)</a></td>
            <td>$("div:has(p)")</td>
            <td>所有包含有 &lt;p&gt; 元素在其内的 &lt;div&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:empty</a></td>
            <td>$(":empty")</td>
            <td>所有空元素</td>
        </tr>
        <tr>
            <td><a href="#">:parent</a></td>
            <td>$(":parent")</td>
            <td>所有是另一个元素的父元素的元素</td>
        </tr>
        <tr>
            <td><a href="#">:hidden</a></td>
            <td>$("p:hidden")</td>
            <td>所有隐藏的 &lt;p&gt; 元素</td>
        </tr>
        <tr>
            <td><a href="#">:visible</a></td>
            <td>$("table:visible")</td>
            <td>所有可见的表格</td>
        </tr>
        <tr>
            <td> </td>
            <td> </td>
            <td> </td>
        </tr>
        <tr>
            <td><a href="#">[<em>attribute</em>]</a></td>
            <td>$("[href]")</td>
            <td>所有带有 href 属性的元素</td>
        </tr>
        <tr>
            <td><a href="#">[<em>attribute</em>=<em>value</em>]</a></td>
            <td>$("[href='default.htm']")</td>
            <td>所有带有 href 属性且值等于 "default.htm" 的元素</td>
        </tr>
        <tr>
            <td><a href="#">[<em>attribute</em>!=<em>value</em>]</a></td>
            <td>$("[href!='default.htm']")</td>
            <td>所有带有 href 属性且值不等于 "default.htm" 的元素</td>
        </tr>
        <tr>
            <td><a href="#">[<em>attribute</em>$=<em>value</em>]</a></td>
            <td>$("[href$='.jpg']")</td>
            <td>所有带有 href 属性且值以 ".jpg" 结尾的元素</td>
        </tr>
        <tr>
            <td><a href="#">[<i>attribute</i>|=<i>value</i>]</a></td>
            <td>$("[title|='Tomorrow']")</td>
            <td>所有带有 title 属性且值等于 'Tomorrow' 或者以 'Tomorrow' 后跟连接符作为开头的字符串</td>
        </tr>
        <tr>
            <td><a href="#">[<i>attribute</i>^=<i>value</i>]</a></td>
            <td>$("[title^='Tom']")</td>
            <td>所有带有 title 属性且值以 "Tom" 开头的元素</td>
        </tr>
        <tr>
            <td><a href="#">[<i>attribute</i>~=<i>value</i>]</a></td>
            <td>$("[title~='hello']")</td>
            <td>所有带有 title 属性且值包含单词 "hello" 的元素</td>
        </tr>
        <tr>
            <td><a href="#">[<i>attribute*</i>=<i>value</i>]</a></td>
            <td>$("[title*='hello']")</td>
            <td>所有带有 title 属性且值包含字符串 "hello" 的元素</td>
        </tr>
        <tr>
            <td> </td>
            <td> </td>
            <td> </td>
        </tr>
        <tr>
            <td><a href="#">:file</a></td>
            <td>$(":file")</td>
            <td>所有带有 type="file" 的 input 元素</td>
        </tr>
        <tr>
            <td><a href="#">:enabled</a></td>
            <td>$(":enabled")</td>
            <td>所有启用的 input 元素</td>
        </tr>
        <tr>
            <td><a href="#">:disabled</a></td>
            <td>$(":disabled")</td>
            <td>所有禁用的 input 元素</td>
        </tr>
        <tr>
            <td><a href="#">:selected</a></td>
            <td>$(":selected")</td>
            <td>所有选定的 input 元素</td>
        </tr>
        <tr>
            <td><a href="#">:checked</a></td>
            <td>$(":checked")</td>
            <td>所有选中的 input 元素</td>
        </tr>
    </tbody>
</table>


<h2 id="jQuery-主要事件方法"><a href="#jQuery-主要事件方法" class="headerlink" title="jQuery 主要事件方法"></a>jQuery 主要事件方法</h2><ul>
<li>bind()    向元素添加事件处理程序</li>
<li>blur()    添加/触发 blur 事件</li>
<li>change()        添加/触发 change 事件</li>
<li>click()        添加/触发 click 事件</li>
<li>dblclick()        添加/触发 double click 事件</li>
<li>delegate()        向匹配元素的当前或未来的子元素添加处理程序</li>
<li>event.stopPropagation()    阻止事件向上冒泡到 DOM 树，阻止任何父处理程序被事件通知</li>
<li>focus()        添加/触发 focus 事件</li>
<li>focusin()        添加事件处理程序到 focusin 事件</li>
<li>focusout()    添加事件处理程序到 focusout 事件</li>
<li>hover()        添加两个事件处理程序到 hover 事件</li>
<li>keydown()        添加/触发 keydown 事件</li>
<li>keypress()    添加/触发 keypress 事件</li>
<li>keyup()        添加/触发 keyup 事件</li>
<li>live()        在版本 1.9 中被移除。添加一个或多个事件处理程序到当前或未来的被选元素</li>
<li>on()        向元素添加事件处理程序</li>
<li>off()        移除通过 on() 方法添加的事件处理程序</li>
<li>ready()    规定当 DOM 完全加载时要执行的函数</li>
<li>resize()    添加/触发 resize 事件</li>
<li>scroll()    添加/触发 scroll 事件</li>
<li>select()    添加/触发 select 事件</li>
<li>submit()    添加/触发 submit 事件</li>
</ul>
<h2 id="jQuery-AJAX"><a href="#jQuery-AJAX" class="headerlink" title="jQuery AJAX"></a>jQuery AJAX</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">	async:	&#x2F;&#x2F; default true</span><br><span class="line">	cache:	&#x2F;&#x2F; default true</span><br><span class="line">	url: </span><br><span class="line">	dataType:</span><br><span class="line">	data:</span><br><span class="line">	type:</span><br><span class="line">	beforeSend: function()&#123;&#125;</span><br><span class="line">	success: function()&#123;&#125;</span><br><span class="line">	error:	function()&#123;&#125;</span><br><span class="line">	complete: function()&#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>




















]]></content>
  </entry>
  <entry>
    <title>HTML5</title>
    <url>/2020/04/19/HTML5/</url>
    <content><![CDATA[<h1 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h1><h2 id="HTML-标签列表（功能排序）"><a href="#HTML-标签列表（功能排序）" class="headerlink" title="HTML 标签列表（功能排序）"></a>HTML 标签列表（功能排序）</h2><p>New : HTML5 新标签</p>
<table>
    <tbody>
        <tr>
            <th>标签</th>
            <th>描述</th>
        </tr>
        <tr>
            <td><b>基础</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;!DOCTYPE&gt; </td>
            <td>定义文档类型。</td>
        </tr>
        <tr>
            <td> &lt;html&gt; </td>
            <td>定义一个 HTML 文档</td>
        </tr>
        <tr>
            <td> &lt;title&gt; </td>
            <td>html页面的标题 </td>
        </tr>
        <tr>
            <td> &lt;body&gt; </td>
            <td>定义文档的主体</td>
        </tr>
        <tr>
            <td> &lt;h1&gt; to &lt;h6&gt; </td>
            <td>定义 body 的标题 </td>
        </tr>
        <tr>
            <td> &lt;p&gt; </td>
            <td>定义一个段落</td>
        </tr>
        <tr>
            <td> &lt;br&gt; </td>
            <td>换行。</td>
        </tr>
        <tr>
            <td> &lt;hr&gt; </td>
            <td>水平线。</td>
        </tr>
        <tr>
            <td> &lt;!--...--&gt; </td>
            <td>注释</td>
        </tr>
        <tr>
            <td><b>格式</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;abbr&gt; </td>
            <td>定义一个缩写。</td>
        </tr>
        <tr>
            <td> &lt;address&gt; </td>
            <td>地址信息。</td>
        </tr>
        <tr>
            <td> &lt;b&gt; </td>
            <td>粗体文本。</td>
        </tr>
        <tr>
            <td> &lt;bdi&gt;  New </td>
            <td>允许设置一段文本，使其脱离其父元素的文本方向设置。</td>
        </tr>
        <tr>
            <td> &lt;bdo&gt; </td>
            <td>定义文本的方向。</td>
        </tr>
        <tr>
            <td> &lt;blockquote&gt; </td>
            <td>定义块引用。</td>
        </tr>
        <tr>
            <td> &lt;cite&gt; </td>
            <td>定义引用(citation)。</td>
        </tr>
        <tr>
            <td> &lt;code&gt; </td>
            <td>定义计算机代码文本。</td>
        </tr>
        <tr>
            <td> &lt;del&gt; </td>
            <td>定义被删除文本。</td>
        </tr>
        <tr>
            <td> &lt;dfn&gt; </td>
            <td>定义定义项目。</td>
        </tr>
        <tr>
            <td> &lt;em&gt; </td>
            <td>定义强调文本。 </td>
        </tr>
        <tr>
            <td> &lt;i&gt; </td>
            <td>定义斜体文本。</td>
        </tr>
        <tr>
            <td> &lt;ins&gt; </td>
            <td>定义被插入文本。</td>
        </tr>
        <tr>
            <td> &lt;kbd&gt; </td>
            <td>定义键盘文本。</td>
        </tr>
        <tr>
            <td> &lt;mark&gt; New </td>
            <td>定义带有记号的文本。</td>
        </tr>
        <tr>
            <td> &lt;meter&gt; New </td>
            <td>仅用于定义已知最大和最小值的度量。</td>
        </tr>
        <tr>
            <td> &lt;pre&gt; </td>
            <td>定义预格式文本</td>
        </tr>
        <tr>
            <td> &lt;progress&gt; New </td>
            <td>运行中的任务进度（进程）。</td>
        </tr>
        <tr>
            <td> &lt;q&gt; </td>
            <td>定义短的引用。</td>
        </tr>
        <tr>
            <td> &lt;rp&gt; New </td>
            <td>定义不支持 ruby 元素的浏览器所显示的内容。</td>
        </tr>
        <tr>
            <td> &lt;rt&gt; New </td>
            <td>定义字符（中文注音或字符）的解释或发音。</td>
        </tr>
        <tr>
            <td> &lt;ruby&gt; New </td>
            <td>定义 ruby 注释（中文注音或字符）。</td>
        </tr>
        <tr>
            <td> &lt;s&gt; </td>
            <td>加删除线的文本。</td>
        </tr>
        <tr>
            <td> &lt;samp&gt; </td>
            <td>定义计算机代码样本。</td>
        </tr>
        <tr>
            <td> &lt;small&gt; </td>
            <td>小号文本。</td>
        </tr>
        <tr>
            <td> &lt;strong&gt; </td>
            <td>定义语气更为强烈的强调文本。</td>
        </tr>
        <tr>
            <td> &lt;sub&gt; </td>
            <td>定义下标文本。</td>
        </tr>
        <tr>
            <td> &lt;sup&gt; </td>
            <td>定义上标文本。</td>
        </tr>
        <tr>
            <td> &lt;time&gt; New </td>
            <td>定义一个日期/时间</td>
        </tr>
        <tr>
            <td> &lt;u&gt; </td>
            <td>定义下划线文本。</td>
        </tr>
        <tr>
            <td> &lt;var&gt; </td>
            <td>定义文本的变量部分。</td>
        </tr>
        <tr>
            <td> &lt;wbr&gt; New </td>
            <td>规定在文本中的何处适合添加换行符。</td>
        </tr>
        <tr>
            <td><b>表单</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;form&gt; </td>
            <td>定义一个 HTML 表单，用于用户输入。</td>
        </tr>
        <tr>
            <td> &lt;input&gt; </td>
            <td>定义一个输入控件</td>
        </tr>
        <tr>
            <td> &lt;textarea&gt; </td>
            <td>定义多行的文本输入控件。</td>
        </tr>
        <tr>
            <td> &lt;button&gt; </td>
            <td>定义按钮。</td>
        </tr>
        <tr>
            <td> &lt;select&gt; </td>
            <td>定义选择列表（下拉列表）。</td>
        </tr>
        <tr>
            <td> &lt;optgroup&gt; </td>
            <td>定义选择列表中相关选项的组合。</td>
        </tr>
        <tr>
            <td> &lt;option&gt; </td>
            <td>定义选择列表中的选项。</td>
        </tr>
        <tr>
            <td> &lt;label&gt; </td>
            <td>定义 input 元素的标注。</td>
        </tr>
        <tr>
            <td> &lt;fieldset&gt; </td>
            <td>定义围绕表单中元素的边框。</td>
        </tr>
        <tr>
            <td> &lt;legend&gt; </td>
            <td>定义 fieldset 元素的标题。</td>
        </tr>
        <tr>
            <td> &lt;datalist&gt; New </td>
            <td>签规定了 input 元素可能的选项列表。</td>
        </tr>
        <tr>
            <td> &lt;keygen&gt; New </td>
            <td>规定用于表单的密钥对生成器字段。</td>
        </tr>
        <tr>
            <td> &lt;output&gt; New </td>
            <td>定义一个计算的结果</td>
        </tr>
        <tr>
            <td><b>框架</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;iframe&gt; </td>
            <td>定义内联框架。</td>
        </tr>
        <tr>
            <td><b>图像</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;img&gt; </td>
            <td>定义图像。</td>
        </tr>
        <tr>
            <td> &lt;map&gt; </td>
            <td>定义图像映射。 </td>
        </tr>
        <tr>
            <td> &lt;area&gt; </td>
            <td>定义图像地图内部的区域。</td>
        </tr>
        <tr>
            <td> &lt;canvas&gt; New </td>
            <td>通过脚本（通常是 JavaScript）来绘制图形（比如图表和其他图像）。</td>
        </tr>
        <tr>
            <td> &lt;figcaption&gt; New </td>
            <td> 为元素定义标题 </td>
        </tr>
        <tr>
            <td> &lt;figure&gt; New </td>
            <td>figure 标签用于对元素进行组合。</td>
        </tr>
        <tr>
            <td><b>Audio/Video</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;audio&gt; New </td>
            <td>定义声音，比如音乐或其他音频流。</td>
        </tr>
        <tr>
            <td> &lt;source&gt; >New </td>
            <td>定义media元素 (&lt;video&gt; 和 &lt;audio&gt;)的媒体资源。media </td>
        </tr>
        <tr>
            <td> &lt;track&gt; New </td>
            <td>为媒体(&lt;video&gt; 和 &lt;audio&gt;)元素定义外部文本轨道。</td>
        </tr>
        <tr>
            <td> &lt;video&gt; New </td>
            <td>定义一个音频或者视频</td>
        </tr>
        <tr>
            <td><b>链接</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;a&gt; </td>
            <td>定义一个链接</td>
        </tr>
        <tr>
            <td> &lt;link&gt; </td>
            <td>定义文档与外部资源的关系。</td>
        </tr>
        <tr>
            <td> &lt;nav&gt; New </td>
            <td>定义导航链接</td>
        </tr>
        <tr>
            <td><b>列表</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;ul&gt; </td>
            <td>定义一个无序列表</td>
        </tr>
        <tr>
            <td> &lt;ol&gt; </td>
            <td>定义一个有序列表</td>
        </tr>
        <tr>
            <td> &lt;li&gt; </td>
            <td>定义一个列表项</td>
        </tr>
        <tr>
            <td> &lt;dl&gt; </td>
            <td>定义标题类型的列表</td>
        </tr>
        <tr>
            <td> &lt;dt&gt; </td>
            <td>列表项</td>
        </tr>
        <tr>
            <td> &lt;dd&gt; </td>
            <td>列表项内容</td>
        </tr>
        <tr>
            <td> &lt;menu&gt; </td>
            <td>定义菜单列表。</td>
        </tr>
        <tr>
            <td> &lt;command&gt; New </td>
            <td>定义用户可能调用的命令（比如单选按钮、复选框或按钮）。</td>
        </tr>
        <tr>
            <td><b>表格</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;table&gt; </td>
            <td>定义一个表格</td>
        </tr>
        <tr>
            <td> &lt;caption&gt; </td>
            <td>定义表格标题。</td>
        </tr>
        <tr>
            <td> &lt;th&gt; </td>
            <td>定义表格中的表头单元格。</td>
        </tr>
        <tr>
            <td> &lt;tr&gt; </td>
            <td>定义表格中的行。</td>
        </tr>
        <tr>
            <td> &lt;td&gt; </td>
            <td>定义表格中的单元。</td>
        </tr>
        <tr>
            <td> &lt;thead&gt; </td>
            <td>定义表格中的表头内容。</td>
        </tr>
        <tr>
            <td> &lt;tbody&gt; </td>
            <td>定义表格中的主体内容。</td>
        </tr>
        <tr>
            <td> &lt;tfoot&gt; </td>
            <td>定义表格中的表注内容（脚注）。</td>
        </tr>
        <tr>
            <td> &lt;col&gt; </td>
            <td>定义表格中一个或多个列的属性值。</td>
        </tr>
        <tr>
            <td> &lt;colgroup&gt; </td>
            <td>定义表格中供格式化的列组。</td>
        </tr>
        <tr>
            <td><b>元信息</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;head&gt; </td>
            <td>HTML 文档的头部信息</td>
        </tr>
        <tr>
            <td> &lt;meta&gt; </td>
            <td>定义关于 HTML 文档的元信息。</td>
        </tr>
        <tr>
            <td> &lt;base&gt </td>
            <td>定义页面中所有链接的默认地址或默认目标。</td>
        </tr>
        <tr>
            <td><b>程序</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;script&gt; </td>
            <td>定义客户端脚本。</td>
        </tr>
        <tr>
            <td> &lt;noscript&gt; </td>
            <td>定义针对不支持客户端脚本的用户的替代内容。</td>
        </tr>
        <tr>
            <td> &lt;embed&gt; New </td>
            <td>定义了一个容器，用来嵌入外部应用或者互动程序（插件）。</td>
        </tr>
        <tr>
            <td> &lt;object&gt; </td>
            <td>定义嵌入的对象。</td>
        </tr>
        <tr>
            <td> &lt;param&gt; </td>
            <td>定义对象的参数。</td>
        </tr>
        <tr>
            <td><b>其他</b></td>
            <td> </td>
        </tr>
        <tr>
            <td> &lt;style&gt; </td>
            <td>定义文档的样式信息。</td>
        </tr>
        <tr>
            <td> &lt;div&gt; </td>
            <td>定义文档中的节。</td>
        </tr>
        <tr>
            <td> &lt;span&gt; </td>
            <td>定义文档中的节。</td>
        </tr>
        <tr>
            <td> &lt;header&gt; New </td>
            <td>定义一个文档头部部分</td>
        </tr>
        <tr>
            <td> &lt;footer&gt; New </td>
            <td>定义一个文档底部</td>
        </tr>
        <tr>
            <td> &lt;section&gt; New </td>
            <td>定义了文档的某个区域</td>
        </tr>
        <tr>
            <td> &lt;article&gt; New </td>
            <td>定义一个文章内容</td>
        </tr>
        <tr>
            <td> &lt;aside&gt; New </td>
            <td>定义其所处内容之外的内容。</td>
        </tr>
        <tr>
            <td> &lt;details&gt; New </td>
            <td>定义了用户可见的或者隐藏的需求的补充细节。</td>
        </tr>
        <tr>
            <td> &lt;dialog&gt; New </td>
            <td>定义一个对话框或者窗口</td>
        </tr>
        <tr>
            <td> &lt;summary&gt; New </td>
            <td>定义一个可见的标题。 当用户点击标题时会显示出详细信息。</td>
        </tr>
    </tbody>
</table>

<h2 id="HTML-属性"><a href="#HTML-属性" class="headerlink" title="HTML 属性"></a>HTML 属性</h2><p>New : HTML5 新属性。</p>
<table>
    <tbody>
        <tr>
            <th>属性</th>
            <th>描述</th>
        </tr>
        <tr>
            <td>accesskey</td>
            <td>设置访问元素的键盘快捷键。</td>
        </tr>
        <tr>
            <td>class</td>
            <td>规定元素的类名（classname）</td>
        </tr>
        <tr>
            <td>contenteditable New </td>
            <td>规定是否可编辑元素的内容。</td>
        </tr>
        <tr>
            <td>contextmenu New </td>
            <td>指定一个元素的上下文菜单。当用户右击该元素，出现上下文菜单</td>
        </tr>
        <tr>
            <td>dir</td>
            <td>设置元素中内容的文本方向。</td>
        </tr>
        <tr>
            <td>draggable New ></td>
            <td>指定某个元素是否可以拖动</td>
        </tr>
        <tr>
            <td>dropzone New</td>
            <td>指定是否将数据复制，移动，或链接，或删除</td>
        </tr>
        <tr>
            <td>hidden New</td>
            <td>hidden 属性规定对元素进行隐藏。</td>
        </tr>
        <tr>
            <td>id</td>
            <td>规定元素的唯一 id</td>
        </tr>
        <tr>
            <td>lang</td>
            <td>设置元素中内容的语言代码。</td>
        </tr>
        <tr>
            <td>spellcheck New</td>
            <td>检测元素是否拼写错误</td>
        </tr>
        <tr>
            <td>style</td>
            <td>规定元素的行内样式（inline style）</td>
        </tr>
        <tr>
            <td>tabindex</td>
            <td>设置元素的 Tab 键控制次序。</td>
        </tr>
        <tr>
            <td>title</td>
            <td>规定元素的额外信息（可在工具提示中显示）</td>
        </tr>
        <tr>
            <td>translate New</td>
            <td>指定是否一个元素的值在页面载入时是否需要翻译</td>
        </tr>
    </tbody>
</table>

<h2 id="HTML-事件"><a href="#HTML-事件" class="headerlink" title="HTML 事件"></a>HTML 事件</h2><table>
    <tbody>
        <tr>
            <th>属性</th>
            <th>描述</th>
        </tr>
        <tr>
            <td>onblur</td>
            <td>当元素失去焦点时运行脚本</td>
        </tr>
        <tr>
            <td>onchange</td>
            <td>当元素改变时运行脚本</td>
        </tr>
        <tr>
            <td>oncontextmenu New</td>
            <td>当触发上下文菜单时运行脚本</td>
        </tr>
        <tr>
            <td>onfocus</td>
            <td>当元素获得焦点时运行脚本</td>
        </tr>
        <tr>
            <td>onformchange New</td>
            <td>当表单改变时运行脚本</td>
        </tr>
        <tr>
            <td>onforminput New</td>
            <td>当表单获得用户输入时运行脚本</td>
        </tr>
        <tr>
            <td>oninput New</td>
            <td>当元素获得用户输入时运行脚本</td>
        </tr>
        <tr>
            <td>oninvalid New</td>
            <td>当元素无效时运行脚本</td>
        </tr>
        <tr>
            <td>onselect</td>
            <td>当选取元素时运行脚本</td>
        </tr>
        <tr>
            <td>onsubmit</td>
            <td>当提交表单时运行脚本</td>
        </tr>
    </tbody>
</table>

<table>
    <tbody>
        <tr>
            <th>属性</th>
            <th>描述</th>
        </tr>
        <tr>
            <td> onafterprint New </td>
            <td>在打印文档之后运行脚本</td>
        </tr>
        <tr>
            <td>onbeforeprint New</td>
            <td>在文档打印之前运行脚本</td>
        </tr>
        <tr>
            <td>onbeforeonload New</td>
            <td>在文档加载之前运行脚本</td>
        </tr>
        <tr>
            <td>onblur</td>
            <td>当窗口失去焦点时运行脚本</td>
        </tr>
        <tr>
            <td>onerror New</td>
            <td>当错误发生时运行脚本</td>
        </tr>
        <tr>
            <td>onfocus</td>
            <td>当窗口获得焦点时运行脚本</td>
        </tr>
        <tr>
            <td>onhaschange New</td>
            <td>当文档改变时运行脚本</td>
        </tr>
        <tr>
            <td>onload</td>
            <td>当文档加载时运行脚本</td>
        </tr>
        <tr>
            <td>onmessage New</td>
            <td>当触发消息时运行脚本</td>
        </tr>
        <tr>
            <td>onoffline New</td>
            <td>当文档离线时运行脚本</td>
        </tr>
        <tr>
            <td>ononline New</td>
            <td>当文档上线时运行脚本</td>
        </tr>
        <tr>
            <td>onpagehide New</td>
            <td>当窗口隐藏时运行脚本</td>
        </tr>
        <tr>
            <td>onpageshow New</td>
            <td>当窗口可见时运行脚本</td>
        </tr>
        <tr>
            <td>onpopstate New</td>
            <td>当窗口历史记录改变时运行脚本</td>
        </tr>
        <tr>
            <td>onredo New</td>
            <td>当文档执行再执行操作（redo）时运行脚本</td>
        </tr>
        <tr>
            <td>onresize New</td>
            <td>当调整窗口大小时运行脚本</td>
        </tr>
        <tr>
            <td>onstorage New</td>
            <td>当文档加载加载时运行脚本</td>
        </tr>
        <tr>
            <td>onundo New</td>
            <td>当 Web Storage 区域更新时（存储空间中的数据发生变化时）</td>
        </tr>
        <tr>
            <td>onunload New</td>
            <td>当用户离开文档时运行脚本</td>
        </tr>
    </tbody>
</table>


<table>
    <tbody>
        <tr>
            <th>属性</th>
            <th>描述</th>
        </tr>
        <tr>
            <td>onkeydown</td>
            <td>当按下按键时运行脚本</td>
        </tr>
        <tr>
            <td> onkeypress </td>
            <td>当按下并松开按键时运行脚本</td>
        </tr>
        <tr>
            <td> onkeyup</td>
            <td>当松开按键时运行脚本</td>
        </tr>
    </tbody>
</table>


<table>
    <tbody>
        <tr>
            <th>属性</th>
            <th>描述</th>
        </tr>
        <tr>
            <td> onclick</td>
            <td>当单击鼠标时运行脚本</td>
        </tr>
        <tr>
            <td> ondblclick</td>
            <td>当双击鼠标时运行脚本</td>
        </tr>
        <tr>
            <td>ondrag New</td>
            <td>当拖动元素时运行脚本</td>
        </tr>
        <tr>
            <td>ondragend New</td>
            <td>当拖动操作结束时运行脚本</td>
        </tr>
        <tr>
            <td>ondragenter New</td>
            <td>当元素被拖动至有效的拖放目标时运行脚本</td>
        </tr>
        <tr>
            <td>ondragleave New</td>
            <td>当元素离开有效拖放目标时运行脚本</td>
        </tr>
        <tr>
            <td>ondragover New</td>
            <td>当元素被拖动至有效拖放目标上方时运行脚本</td>
        </tr>
        <tr>
            <td>ondragstart New</td>
            <td>当拖动操作开始时运行脚本</td>
        </tr>
        <tr>
            <td>ondrop New</td>
            <td>当被拖动元素正在被拖放时运行脚本</td>
        </tr>
        <tr>
            <td>onmousedown</td>
            <td>当按下鼠标按钮时运行脚本</td>
        </tr>
        <tr>
            <td>onmousemove</td>
            <td>当鼠标指针移动时运行脚本</td>
        </tr>
        <tr>
            <td>onmouseout</td>
            <td>当鼠标指针移出元素时运行脚本</td>
        </tr>
        <tr>
            <td>onmouseover</td>
            <td>当鼠标指针移至元素之上时运行脚本</td>
        </tr>
        <tr>
            <td>onmouseup</td>
            <td>当松开鼠标按钮时运行脚本</td>
        </tr>
        <tr>
            <td>onmousewheel New</td>
            <td>当转动鼠标滚轮时运行脚本</td>
        </tr>
        <tr>
            <td>onscroll New</td>
            <td>当滚动元素滚动元素的滚动条时运行脚本</td>
        </tr>
    </tbody>
</table>

<p>…</p>
]]></content>
  </entry>
  <entry>
    <title>Bootstrap Note</title>
    <url>/2020/04/16/Bootstrap-Note/</url>
    <content><![CDATA[<h1 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h1><h2 id="Bootstrap-简介"><a href="#Bootstrap-简介" class="headerlink" title="Bootstrap 简介"></a>Bootstrap 简介</h2><p><code>bootsrap</code>是基于<code>jQuery</code>的一款前段框架,jQuery 必须在 Bootstrap 之前引入。它需要使用<code>HTML5</code>的 doctype ，Bootstrap3 是以移动设备优先的。<br>为了兼容性更好，需要加上 viewport 的 meta 标签。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bootstrap&#x2F;</span><br><span class="line"></span><br><span class="line">├── dist&#x2F;</span><br><span class="line">│   ├── css&#x2F;</span><br><span class="line">│   ├── js&#x2F;</span><br><span class="line">│   └── fonts&#x2F;</span><br><span class="line">|── docs&#x2F;</span><br><span class="line">|    └── examples&#x2F;</span><br><span class="line">├── fonts&#x2F;</span><br><span class="line">├── less&#x2F;</span><br><span class="line">├── js&#x2F;</span><br><span class="line">│	|── alert.js</span><br><span class="line">│	|── button.js</span><br><span class="line">│	|── carouse.js</span><br><span class="line">│	|── collapse.js</span><br><span class="line">│	|── dropdown.js</span><br><span class="line">│	|── modal.js</span><br><span class="line">│	|── popover.js		&#x2F;&#x2F; 弹出框</span><br><span class="line">│	|── scrollspy.js	&#x2F;&#x2F; 滚动监听</span><br><span class="line">│	|── tab.js</span><br><span class="line">│	|── tooltip.js		&#x2F;&#x2F; 模态框</span><br><span class="line">│	|── transition.js	&#x2F;&#x2F; 过渡效果</span><br></pre></td></tr></table></figure>

<h3 id="基本模板"><a href="#基本模板" class="headerlink" title="基本模板"></a>基本模板</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span>		<span class="comment">&lt;!--  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span>		<span class="comment">&lt;!-- 设置默认本地语言 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span>		<span class="comment">&lt;!-- 兼容 IE edge 的 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span>		<span class="comment">&lt;!-- width 属性控制设备的宽度 --&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- &lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"&gt; --&gt;</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">	</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 101 Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">	</span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="全局样式"><a href="#全局样式" class="headerlink" title="全局样式"></a>全局样式</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"Helvetica Neue"</span>, Helvetica, Arial, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.428571429</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>并且使用 Normalize.css 来初始化一些元素，保证不同浏览器的一致性。</p>
<h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><p>主要有两个 class ：container 和 container-fluid。 容器不能相互嵌套。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">   <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">   <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line">   <span class="attribute">margin-right</span>: auto;</span><br><span class="line">   <span class="attribute">margin-left</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h3><ul>
<li><code>row</code>必须放到<code>container</code>内。</li>
<li>用<code>row</code>创建<code>col</code>列。</li>
<li>内容应该放置在列内，且唯有<code>列</code>可以是<code>行</code>的<code>直接</code>子元素。</li>
<li>列通过内边距（padding）来创建列内容之间的间隙。该内边距是通过 .rows 上的外边距（margin）取负，表示第一列和最后一列的行偏移。</li>
<li>网格系统是通过指定您想要横跨的十二个可用的列来创建的。例如，要创建三个相等的列，则使用三个 .col-xs-4。</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-*-*"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-*-*"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>     </span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span>....</span><br></pre></td></tr></table></figure>
<h4 id="偏移列"><a href="#偏移列" class="headerlink" title="偏移列"></a>偏移列</h4><p>大屏幕使用 .col-md-offset-* 这些类实现偏移。这些类会把一个列的左外边距（margin）增加 * 列，其中 * 范围是从 1 到 11。</p>
<h4 id="嵌套列"><a href="#嵌套列" class="headerlink" title="嵌套列"></a>嵌套列</h4><p>要嵌套列，必须先在列里面写<code>row</code>，然后在行里面写列。</p>
<h4 id="列排序"><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h4><p>通过使用 .col-md-push-* 和 .col-md-pull-* 类就可以很容易的改变列（column）的顺序。</p>
<h3 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><ul>
<li><code>&lt;h1&gt; &lt;h6&gt;</code> 标题和 <small> 副标题</li>
<li><code>&lt;mark&gt;</code> 用来显示高亮内容</li>
<li><code>&lt;del&gt; &lt;s&gt;</code> 带删除线的文本</li>
<li><code>&lt;ins&gt; &lt;u&gt;</code> 带下划线的文本</li>
<li><code>&lt;blockquote&gt;</code> 引用文本</li>
</ul>
<ul>
<li>用于对齐方式的类： text-left text-center text-right text-justify text-nowrap</li>
<li>用于改变文本大小： text-lowercase  text-uppercase  text-capitalize</li>
</ul>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul>
<li>作用在 ul ol 上的 list-unstyled 类用来移除着重号， list-inline 类用来把所有<code>li</code>放到一行内</li>
<li>作用在  dl  上的 dl-horizontal 类可以使 dt 和 dd 显示到一行内</li>
<li>text-overflow 属性可以截断列表中太长的内容</li>
</ul>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul>
<li><code>&lt;kbd&gt;</code>  标记用户通过键盘输入的内容。</li>
<li><code>&lt;code&gt;</code> 内联显示代码</li>
<li><code>&lt;pre&gt;</code> 块状显示代码</li>
<li>当使用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签时，开始和结束标签应该使用 unicode 变体： <code>&amp;lt;</code> 和 <code>&amp;gt;</code>。</li>
<li><code>.pre-scrollable</code> 类    使 <code>&lt;pre&gt;</code> 元素可滚动</li>
<li><code>&lt;var&gt;</code> 标签标记变量</li>
<li><code>&lt;samp&gt;</code> 标签来标记程序输出的内容</li>
</ul>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span>		<span class="comment">&lt;!-- 使表格变为响应式，在小屏幕可以滚动 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>基本的表格布局<span class="tag">&lt;/<span class="name">caption</span>&gt;</span>	<span class="comment">&lt;!-- 表格头 --&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			 <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span>		<span class="comment">&lt;!-- 标题 --&gt;</span></span><br><span class="line">			 <span class="tag">&lt;<span class="name">th</span>&gt;</span>城市<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			 <span class="tag">&lt;<span class="name">td</span>&gt;</span>Tanmay<span class="tag">&lt;/<span class="name">td</span>&gt;</span>	<span class="comment">&lt;!-- 表格列内容 --&gt;</span></span><br><span class="line">			 <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bangalore<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			 <span class="tag">&lt;<span class="name">td</span>&gt;</span>Sachin<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			 <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mumbai<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>用在<code>table</code>上的类：</p>
<ul>
<li><code>.table</code>基本表格</li>
<li><code>.table-striped</code>条纹表格</li>
<li><code>.table-bordered</code>有边框的表格</li>
<li><code>.table-hover</code> tbody 有悬停阴影的表格</li>
<li><code>.table-condensed</code> padding 紧凑的表格</li>
</ul>
<p>用在<code>tr</code> 和 <code>td</code>上的类： .active     .success  .info  .warning    .danger</p>
<h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><h4 id="表单布局："><a href="#表单布局：" class="headerlink" title="表单布局："></a>表单布局：</h4><ul>
<li><p>垂直表单（默认）</p>
<ul>
<li>把标签和控件放在一个带有类 .form-group 的 <code>&lt;div&gt;</code> 中。这样可以获取最佳间距。</li>
<li>向所有的文本元素 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 添加类 .form-control。</li>
<li>默认情况下，Bootstrap 中的 input、select 和 textarea 有 100% 宽度。在使用内联表单时，您需要在表单控件上设置一个宽度。</li>
<li>可以通过为 label 设置 .sr-only 类将其隐藏。</li>
</ul>
</li>
<li><p>内联表单</p>
<ul>
<li>向 form 标签添加类 .form-inline</li>
<li>可以通过为 label 设置 .sr-only 类将其隐藏。</li>
<li>可以手动设置 wdith</li>
<li>一定要添加 label 标签</li>
</ul>
</li>
<li><p>水平表单</p>
<ul>
<li>向父 form 元素添加类 .form-horizontal。</li>
<li>把标签和控件放在一个带有类 .form-group 的 <div> 中。</li>
<li>向标签对应的 label 添加类 .control-label。</li>
<li>.form-group 类和 .col-<em>-</em> 这样的栅格类结合使用，从而使 label 和表单水平显示。</li>
</ul>
</li>
<li><p>必须添加 type 属性声明</p>
</li>
<li><p>如果需要在表单中将一行纯文本和 label 元素放置于同一行，为 <p> 元素添加 .form-control-static 类即可。</p>
</li>
<li><p>要在文本输入框 <code>&lt;input&gt;</code> 前面、后面或是两边加上文字或按钮等，可以为 输入框组 input-group 赋予 .input-group-addon 或 .input-group-btn 类，就可以给 .form-control 的前面或后面添加额外的元素了。</p>
</li>
</ul>
<h4 id="复选框（CheckBoxe）和单选框（Radio）"><a href="#复选框（CheckBoxe）和单选框（Radio）" class="headerlink" title="复选框（CheckBoxe）和单选框（Radio）"></a>复选框（CheckBoxe）和单选框（Radio）</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox disabled"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">    Option two is disabled</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"radio disabled"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"optionsRadios"</span> <span class="attr">id</span>=<span class="string">"optionsRadios"</span> <span class="attr">value</span>=<span class="string">"option"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">    Option three is disabled</span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>对一系列复选框和单选框使用 .checkbox-inline 或 .radio-inline class，控制它们显示在同一行上。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;label class&#x3D;&quot;checkbox-inline&quot;&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;inlineCheckbox1&quot; value&#x3D;&quot;option1&quot;&gt; 1</span><br><span class="line">&lt;&#x2F;label&gt;</span><br><span class="line">&lt;label class&#x3D;&quot;radio-inline&quot;&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;inlineRadioOptions&quot; id&#x3D;&quot;inlineRadio1&quot; value&#x3D;&quot;option1&quot;&gt; 1</span><br><span class="line">&lt;&#x2F;label&gt;</span><br></pre></td></tr></table></figure>

<h4 id="下拉列表（select）"><a href="#下拉列表（select）" class="headerlink" title="下拉列表（select）"></a>下拉列表（select）</h4><ul>
<li><code>select</code> 标签也使用 .form-control 类。可多选需要设置 multiple 属性。</li>
<li>只需要对父元素简单地添加适当的 class（.has-warning、 .has-error 或 .has-success）即可显示对应的验证样式。</li>
<li>.has-feedback 类 对应的反馈图标（feedback icon）只能使用在文本输入框 <code>&lt;input class=&quot;form-control&quot;&gt;</code> 元素上。</li>
<li>控件的尺寸通过 .input-lg 类似的类设置高度，通过 .col-lg-* 类似的类设置宽度。</li>
</ul>
<h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><p><code>&lt;a&gt;</code>、<code>&lt;button&gt;</code> 或 <code>&lt;input&gt;</code> 元素添加按钮类，都可以作为 button 使用。<br>使用 .btn-lg、.btn-sm 或 .btn-xs 来改变按钮的尺寸。<br>使用 .active、.disabled 为 a 标签类型的按钮改变状态，使用 disabled、 <s>opacity</s> 属性给 button 标签改变状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- Standard button --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-default&quot;&gt;（默认样式）Default&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot;&gt;（首选项）Primary&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Indicates a successful or positive action --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-success&quot;&gt;（成功）Success&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Contextual button for informational alert messages --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-info&quot;&gt;（一般信息）Info&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Indicates caution should be taken with this action --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-warning&quot;&gt;（警告）Warning&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Indicates a dangerous or potentially negative action --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger&quot;&gt;（危险）Danger&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-link&quot;&gt;（链接）Link&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure>

<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>为图片添加 .img-responsive 类可以让图片支持响应式布局。<br>让使用了 .img-responsive 类的图片水平居中，使用 .center-block 类。<br>img 标签有三个类可以改变图片形状：<br>    - .img-rounded：添加 border-radius:6px 来获得图像圆角。<br>    - .img-circle：添加 border-radius:500px 来让整个图像变成圆形。<br>    - .img-thumbnail：添加一些内边距（padding）和一个灰色的边框。</p>
<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="Glyphicons-字体图标"><a href="#Glyphicons-字体图标" class="headerlink" title="Glyphicons 字体图标"></a>Glyphicons 字体图标</h3><p>字形图标（Glyphicons）是在 Web 项目中使用的图标字体。<br><code>&lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt;</code> glyphicon-user 就是要使用的具体图标的名字</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">  font-family: &#39;Glyphicons Halflings&#39;;</span><br><span class="line">  src: url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.eot&#39;);   &#x2F;* 图标字体的位置 *&#x2F;</span><br><span class="line">  src: url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.svg#glyphicons_halflingsregular&#39;) format(&#39;svg&#39;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.glyphicon &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  top: 1px;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-family: &#39;Glyphicons Halflings&#39;;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  font-style: normal;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">  line-height: 1;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="下拉菜单-Dropdown"><a href="#下拉菜单-Dropdown" class="headerlink" title="下拉菜单 Dropdown"></a>下拉菜单 Dropdown</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;dropdown&quot;&gt;  &#x2F;* fropdown 向下弹出菜单， dropup 向上弹出菜单 *&#x2F;</span><br><span class="line">  &lt;button class&#x3D;&quot;btn btn-default dropdown-toggle&quot; type&#x3D;&quot;button&quot; id&#x3D;&quot;dropdownMenu1&quot; data-toggle&#x3D;&quot;dropdown&quot; aria-haspopup&#x3D;&quot;true&quot; aria-expanded&#x3D;&quot;true&quot;&gt;</span><br><span class="line">    Dropdown</span><br><span class="line">    &lt;span class&#x3D;&quot;caret&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;&#x2F;button&gt;</span><br><span class="line">  &lt;ul class&#x3D;&quot;dropdown-menu&quot; aria-labelledby&#x3D;&quot;dropdownMenu1&quot;&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Another action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li class&#x3D;&quot;dropdown-header&quot;&gt;Dropdown header&lt;&#x2F;li&gt;  &#x2F;* 标题分组 *&#x2F;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Something else here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li role&#x3D;&quot;separator&quot; class&#x3D;&quot;divider&quot;&gt;&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li role&#x3D;&quot;separator&quot; class&#x3D;&quot;divider&quot;&gt;&lt;&#x2F;li&gt;  &#x2F;* 分割线 *&#x2F;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Separated link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">	&lt;li class&#x3D;&quot;disabled&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Disabled link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;  &#x2F;* 禁用的菜单项 *&#x2F;</span><br><span class="line">  &lt;&#x2F;ul&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="按钮组"><a href="#按钮组" class="headerlink" title="按钮组"></a>按钮组</h3><ul>
<li>.btn-group    用于形成基本的按钮组。在 .btn-group 中放置一系列带有.btn 的按钮。</li>
<li>按钮工具栏就是把一组 <div class="btn-group"> 放进一个 <div class="btn-toolbar"> 中。</li>
<li>给 .btn-group 加上 .btn-group-* 类，可以修改按钮组尺寸。</li>
<li>把 .btn-group 放入另一个 .btn-group 中，可以把列表嵌套到后一个 .btn-group。</li>
<li>btn-group-vertical 类可以让按钮组垂直排序。</li>
</ul>
<h3 id="按钮式下拉菜单"><a href="#按钮式下拉菜单" class="headerlink" title="按钮式下拉菜单"></a>按钮式下拉菜单</h3><p>在一个 .btn-group 中放置<code>按钮</code>和<code>下拉菜单</code>即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;btn-group&quot;&gt;</span><br><span class="line">  &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger&quot;&gt;Action&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger dropdown-toggle&quot; data-toggle&#x3D;&quot;dropdown&quot; aria-haspopup&#x3D;&quot;true&quot; aria-expanded&#x3D;&quot;false&quot;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;caret&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;sr-only&quot;&gt;Toggle Dropdown&lt;&#x2F;span&gt;</span><br><span class="line">  &lt;&#x2F;button&gt;</span><br><span class="line">  &lt;ul class&#x3D;&quot;dropdown-menu&quot;&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Another action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Something else here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li role&#x3D;&quot;separator&quot; class&#x3D;&quot;divider&quot;&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Separated link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">  &lt;&#x2F;ul&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="输入框组"><a href="#输入框组" class="headerlink" title="输入框组"></a>输入框组</h3><p>向 .form-control 类的 input 文本输入框的前或后添加前缀后缀的步骤如下：</p>
<ul>
<li>把有 .form-control 类的 input 标签放到类 .input-group 的 <div> 中。</li>
<li>在此 input 的前或者后放一个 span 标签，为此 span 加 .input-group-addon 类。</li>
<li>在 span 内写上要加的前后缀。</li>
</ul>
<h3 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h3><p>导航组件都依赖同一个 .nav 类，状态类也是共用的。<br>在标签页上使用导航需要依赖 JavaScript 标签页插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;ul class&#x3D;&quot;nav nav-tabs nav-justified&quot;&gt;</span><br><span class="line">   &lt;li class&#x3D;&quot;active&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Home&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;SVN&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;iOS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;VB.Net&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Java&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;PHP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">&lt;ul class&#x3D;&quot;nav nav-pills nav-justified&quot;&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;iOS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">   &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;VB.Net&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;li role&#x3D;&quot;presentation&quot; class&#x3D;&quot;disabled&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Disabled link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure>

<h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><h3 id="徽章"><a href="#徽章" class="headerlink" title="徽章"></a>徽章</h3><p>给链接、导航等元素嵌套 <span class="badge"> 元素，可以很醒目的展示新的或未读的信息条目。</p>
<h3 id="巨幕"><a href="#巨幕" class="headerlink" title="巨幕"></a>巨幕</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;jumbotron&quot;&gt;</span><br><span class="line">  &lt;h1&gt;Hello, world!&lt;&#x2F;h1&gt;</span><br><span class="line">  &lt;p&gt;...&lt;&#x2F;p&gt;</span><br><span class="line">  &lt;p&gt;&lt;a class&#x3D;&quot;btn btn-primary btn-lg&quot; href&#x3D;&quot;#&quot; role&#x3D;&quot;button&quot;&gt;Learn more&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="警告框"><a href="#警告框" class="headerlink" title="警告框"></a>警告框</h3><p>使用 .alert 类， alert-success  alert-info  alert-warning  alert-danger<br> .alert-dismissible 使警告框可关闭。<br> 用 .alert-link 工具类，可以为链接设置与当前警告框相符的颜色。</p>
<h3 id="进度条"><a href="#进度条" class="headerlink" title="进度条"></a>进度条</h3><p>创建一个进度条：</p>
<p>添加一个 .progress 的 <div>。<br>在此 <div> 内，添加一个带有 .progress-bar 的 <div>。<br>给此 div 添加一个 style 属性，例如 style=”60%”; 表示进度条在 60% 的位置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;progress&quot;&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;progress-bar&quot; role&#x3D;&quot;progressbar&quot; aria-valuenow&#x3D;&quot;60&quot; aria-valuemin&#x3D;&quot;0&quot; aria-valuemax&#x3D;&quot;100&quot; style&#x3D;&quot;width: 60%;&quot;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;sr-only&quot;&gt;60% Complete&lt;&#x2F;span&gt;	&lt;!-- 隐藏进度数字 --&gt;</span><br><span class="line">	60% Complete	&lt;!-- 显示进度数字 --&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<p>progress-bar-success  progress-bar-info … 改变进度条颜色<br>progress-bar-striped 进度条带条纹， progress-bar-striped active 带动画效果</p>
<h3 id="面版"><a href="#面版" class="headerlink" title="面版"></a>面版</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;panel panel-default&quot;&gt;	&lt;!-- 必须的 --&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;panel-heading&quot;&gt;</span><br><span class="line">    &lt;h3 class&#x3D;&quot;panel-title&quot;&gt;Panel title&lt;&#x2F;h3&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;panel-body&quot;&gt;		&lt;!-- 必须的 --&gt;</span><br><span class="line">    Panel content</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;panel-footer&quot;&gt;Panel footer&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="JavaScript-插件"><a href="#JavaScript-插件" class="headerlink" title="JavaScript 插件"></a>JavaScript 插件</h2><p>bootstrap/js/ 的插件可以单独引入，也可以一次全部引入(即引入bootstrap.min.js)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(document).off(&#39;.data-api&#39;)	&#x2F;&#x2F; 通过关闭data属性的API禁用所有 bootstrap 插件</span><br><span class="line">$(document).off(&#39;.alert.data-api&#39;)	&#x2F;&#x2F; 通过关闭data属性的API禁用 alert bootstrap 插件</span><br></pre></td></tr></table></figure>
<p>具体内容查看 <a href="https://v3.bootcss.com/javascript/" target="_blank" rel="noopener">https://v3.bootcss.com/javascript/</a></p>
]]></content>
  </entry>
  <entry>
    <title>vue note</title>
    <url>/2020/04/08/vue-note/</url>
    <content><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li>直接下载并使用<code>&lt;script&gt;</code>标签引入，Vue会被注册为一个全局变量。</li>
<li>或者使用<code>npm</code>安装，执行<code>npm install vue</code> 安装最新稳定版。</li>
</ul>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Vue的是个渐进式的前端框架。页面上的数据和<code>DOM</code>是响应式的，也即双向绑定的。<br>学习Vue，不要想<code>jQuery</code>，要回来学习<code>JavaScript</code>。</p>
<h2 id="Vue-实例"><a href="#Vue-实例" class="headerlink" title="Vue 实例"></a>Vue 实例</h2><p>一个 <code>Vue</code> 应用由一个通过 <code>new Vue</code> 创建的根 <code>Vue</code> 实例，以及可选的嵌套的、可复用的组件树组成。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var vm &#x3D; new Vue(&#123;</span><br><span class="line">  &#x2F;&#x2F; 选项属性 ...</span><br><span class="line">	</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>vm 是 ViewModel 的缩写，常用来表示 Vue 实例， 这个实例也叫<code>选项对象</code>。</p>
<h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2>]]></content>
  </entry>
  <entry>
    <title>favicon note</title>
    <url>/2020/03/27/favicon-note/</url>
    <content><![CDATA[<p>favicon 是 favorite icon 的缩写。也就是出现在浏览器书签中网站名左边的那个小图标。有的还会出现在地址栏 URL 的左边。</p>
<p>一般都会被命名为 favicon.ico </p>
<p>以下是一些常见的用法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"/src/iamges/favicon.ico&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;link rel="</span><span class="attr">icon</span>" <span class="attr">href</span>=<span class="string">"/src/iamges/favicon.png&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Computer Config</title>
    <url>/2020/03/24/Computer-Config/</url>
    <content><![CDATA[<p>——–[ 概览 ]———————————————————————————-</p>
<p>  电脑型号            联想 ThinkPad E550c 笔记本电脑<br>  操作系统            Windows 10 64位 ( DirectX 12 )</p>
<p>——–[ 主板 ]———————————————————————————-</p>
<p>——–[ 处理器 ]——————————————————————————–</p>
<p>  处理器              英特尔 第四代酷睿 i5-4210U 双核<br>  速度                2.40 GHz (100 MHz x 24.0)<br>  处理器数量          核心数: 2 / 线程数: 4<br>  核心代号            Haswell<br>  生产工艺            22.0纳米<br>  插槽/插座           BGA1168<br>  一级数据缓存        2 x 32 KB, 8-Way, 64 byte lines<br>  一级代码缓存        2 x 32 KB, 8-Way, 64 byte lines<br>  二级缓存            2 x 256 KB, 8-Way, 64 byte lines<br>  三级缓存            3 MB, 12-Way, 64 byte lines</p>
<p>——–[ 硬盘 ]———————————————————————————-</p>
<p>  大小                500 GB<br>  转速                7200 转/分<br>  缓存                32 MB<br>  硬盘已使用          共 1963 次，累计 6523 小时</p>
<p>  接口                SATA III<br>  数据传输率          600.00 MB/秒<br>  特征                S.M.A.R.T,  APM,  48-bit LBA,  NCQ</p>
<p>——–[ 内存 ]———————————————————————————-</p>
<p>  制造日期            2015 年 37 周<br>  型号                7F7F7F7F43 RMT3170ME68F9F1600<br>  序列号              43739109<br>  厂商                Ramaxel<br>  模块位宽:           64 Bits<br>  模块电压:           SSTL 1.35V</p>
<p>——–[ 显卡 ]———————————————————————————-</p>
<p>  显存                112 MB</p>
<p>  BIOS日期            10/16/20 (非显卡制造日期)</p>
<p>  驱动日期            20161216</p>
<p>  BIOS日期            10/16/20 (非显卡制造日期)</p>
<p>  驱动日期            12-27-2017</p>
<p>——–[ 显示器 ]——————————————————————————–</p>
<p>  厂商                联想<br>  固件程序日期        2013 年 41 周 (非显示器制造日期)<br>  屏幕尺寸            15.5 英寸 (34 厘米 x 19 厘米)<br>  显示比例            宽屏 16 : 9<br>  分辨率              1366 x 768 32 位真彩色<br>  Gamma               2.20<br>  电源管理            Standby, Suspend, Active-Off<br>  最大分辨率          1366 x 768</p>
<p>——–[ 其他设备 ]——————————————————————————</p>
<p>  制造商              联想</p>
<p>  制造商              联想</p>
<p>  键盘                PS/2 标准键盘<br>  鼠标                ThinkPad UltraNav<br>  鼠标                HID-compliant 鼠标</p>
<p>  摄像头              Intel(R) RealSense(TM) 3D Camera Virtual Driver</p>
<p>——–[ PCI设备 ]——————————————————————————-</p>
<p>  设备ID              0A04<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Bridge / PCI to HOST<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              0A16<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Display / VGA<br>  子系统制造商        Lenovo<br>  子系统ID            502117AA</p>
<p>  设备ID              9C31<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Serial / USB (UHCI)<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C3A<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Simple Communication / Other<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              1559<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Network / Ethernet<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C20<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Multimedia / Hi-definition Audio<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C10<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Bridge / PCI to PCI<br>  子系统ID            00000000</p>
<p>  设备ID              9C14<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Bridge / PCI to PCI<br>  子系统ID            00000000</p>
<p>  设备ID              9C18<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Bridge / PCI to PCI<br>  子系统ID            00000000</p>
<p>  设备ID              9C1A<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Bridge / PCI to PCI<br>  子系统ID            00000000</p>
<p>  设备ID              9C26<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Serial / USB 2.0 (EHCI)<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C43<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Bridge / PCI to ISA<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C03<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Storage / Serial ATA (AHCI 1.0)<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C22<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Serial / SMBus Controller<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              9C24<br>  制造商              Intel<br>  制造商ID            8086<br>  类别                Data Aquisition &amp; Signal Processing / Other<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>  设备ID              B723<br>  制造商              Realtek<br>  制造商ID            10EC<br>  类别                Network / Other<br>  子系统制造商        Lenovo<br>  子系统ID            B73617AA</p>
<p>  设备ID              5227<br>  制造商              Realtek<br>  制造商ID            10EC<br>  类别                 /<br>  子系统制造商        Lenovo<br>  子系统ID            502017AA</p>
<p>——–[ USB设备 ]——————————————————————————-</p>
<p>  制造商ID            0BDA<br>  产品ID              B728<br>  类别                224 / 1 / 1<br>  设备                 </p>
<p>  制造商ID            8086<br>  产品ID              0A66<br>  类别                239 / 2 / 1<br>  设备<br>  版本                USB 3.0</p>
<p>  制造商ID            0461<br>  产品ID              4D22<br>  类别                0 / 0 / 0<br>  设备                ? USB Optical Mouse<br>  Serial              ?<br>  版本                USB 2.0</p>
]]></content>
  </entry>
  <entry>
    <title>Hexo note</title>
    <url>/2020/03/23/Hexo-note/</url>
    <content><![CDATA[<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="Hexo-建站"><a href="#Hexo-建站" class="headerlink" title="Hexo 建站"></a>Hexo 建站</h2><p><code>Hexo</code>是一个博客框架，默认使用<code>Markdown</code>作为引擎解析文章，生成静态 html 文件。<br>安装 hexo 之前需要安装有 Node.js 和 Git。</p>
<p><img src="/images/hexo_1.png" alt="hexo" title="hexo"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli    &#x2F;&#x2F; 全局安装 hexo</span><br><span class="line">$ npm install hexo           &#x2F;&#x2F; 局部安装 hexo</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo version    &#x2F;&#x2F; 显示 hexo 版本信息</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexo_2.png" alt="check version" title="hexo"></p>
<p>使用 hexo 命令建站</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;	&#x2F;&#x2F; 这个 folder 就是站点的开始的文件夹</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexo_3.png" alt="hexo init" title="hexo init"></p>
<p><img src="/images/hexo_4.png" alt="hexo" title="hexo"></p>
<p>之后你可以看到一些目录和文件,主要有：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   └── _posts</span><br><span class="line">|   └── images</span><br><span class="line">├── public</span><br><span class="line">|   └── _posts</span><br><span class="line">|   └── images</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br></pre></td></tr></table></figure>

<p><code>source\_posts\</code> 这个目录下就是你新建的 MD 文件的存放目录。<code>_config.yml</code>是配置文件，里面有关于此站点的所有设置。</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>使用 <code>hexo init</code>就可以在当前的目录新建一个站点了，及时不设置<code>_config.yml</code>文件，也是可以开始写文章的。默认有个 hello world 的模板。可以直接建.md文件<br>或者使用命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;		&#x2F;&#x2F; 默认式 post 布局</span><br><span class="line">$ hexo new &quot;About me&quot;</span><br><span class="line">$ hexo new &quot;Markdown List&quot;</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexo_5.png" alt="hexo new " title="hexo new"></p>
<p>如果使用了其他布局，之后需要用<code>hexo publish [layout] &lt;title&gt;</code>命令，把文章发布到 post 布局</p>
<h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p><img src="/images/hexo_6.png" alt="hexo server " title="hexo server"></p>
<h2 id="部署到-github"><a href="#部署到-github" class="headerlink" title="部署到 github"></a>部署到 github</h2><p>打开<code>_config.yml</code>文件，在 deploy 部分做配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">type: git</span><br><span class="line">repository: https:&#x2F;&#x2F;github.com&#x2F;winjin&#x2F;winjin.github.io</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>

<p>然后执行命令：<code>npm install hexo-deployer-git --save</code><br>再执行命令：<code>hexo deploy</code><br>由于没有使用 SSH 所以上条命令执行过程中需要输入你 github 的用户名和密码，然后 github pages 就可以用了。</p>
<p>到目前为止，虽然，主题没有设置，一些配置没有更改，但是基本可以使用了。以后写文章到部署到线上，大致会是这样一个过程：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;article name&quot;		&#x2F;&#x2F; 新建一个 .md 文件</span><br><span class="line">使用编辑器打开 article-name.md 写你的文章</span><br><span class="line">hexo server		&#x2F;&#x2F; 开启本地服务，查看调试效果</span><br><span class="line">hexo clean		&#x2F;&#x2F; 会把 public 目录清空</span><br><span class="line">hexo generate	&#x2F;&#x2F; 生成静态文件</span><br><span class="line">hexo deploy		&#x2F;&#x2F; 部署到 github 又需要输入 username 和 password，除非使用你 SSH</span><br></pre></td></tr></table></figure>






















]]></content>
  </entry>
  <entry>
    <title>Markdown List</title>
    <url>/2020/03/20/Markdown-List/</url>
    <content><![CDATA[<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ul>
<li>正常字体</li>
<li><em>斜体</em> <em>斜体</em></li>
<li><strong>加粗</strong></li>
<li><del>删除线</del></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">无</span><br><span class="line">*斜体*  _斜体_</span><br><span class="line">**加粗** </span><br><span class="line">***斜体加粗***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure>

<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<p>邮件<br><a href="mailto:&#97;&#x75;&#116;&#111;&#109;&#97;&#116;&#105;&#99;&#119;&#106;&#x40;&#49;&#x36;&#51;&#x2e;&#99;&#111;&#109;">&#97;&#x75;&#116;&#111;&#109;&#97;&#116;&#105;&#99;&#119;&#106;&#x40;&#49;&#x36;&#51;&#x2e;&#99;&#111;&#109;</a></p>
<h2 id="无、有序列表"><a href="#无、有序列表" class="headerlink" title="无、有序列表"></a>无、有序列表</h2><p>无序列表</p>
<ul>
<li>此字左边的-和几个空格</li>
</ul>
<ul>
<li>此字左边的+和几个空格</li>
</ul>
<ul>
<li>此字左边的*和几个空格</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 此字左边的-和几个空格</span><br><span class="line">+ 此字左边的+和几个空格</span><br><span class="line">* 此字左边的*和几个空格</span><br></pre></td></tr></table></figure>

<p>有序列表</p>
<p>1.此字左边的1和.<br>3. 此字左边的2和.<br>5.  此字左边的3和点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.此字左边的1和.</span><br><span class="line">3. 此字左边的2和.</span><br><span class="line">5.  此字左边的3和点</span><br></pre></td></tr></table></figure>

<p>列表嵌套  上一级和下一级之间输入三个空格</p>
<ul>
<li>一级A<ol>
<li>二级A</li>
<li>二级B</li>
<li>二级C<ul>
<li>三级A</li>
<li>三级B</li>
</ul>
<ul>
<li>三级C</li>
</ul>
</li>
</ol>
</li>
</ul>
<ul>
<li>一级B</li>
<li>一级C<ul>
<li>还是二级A</li>
</ul>
<ul>
<li>还是二级C</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ 一级A</span><br><span class="line">   1. 二级A</span><br><span class="line">   8. 二级B</span><br><span class="line">   3. 二级C</span><br><span class="line">      - 三级A</span><br><span class="line">	  - 三级B</span><br><span class="line">	  * 三级C</span><br><span class="line">- 一级B</span><br><span class="line">- 一级C</span><br><span class="line">   + 还是二级A</span><br><span class="line">   - 还是二级C</span><br></pre></td></tr></table></figure>

<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>Markdown 使用 &gt; 来表示引用。把<code>&gt;</code>放到每一行的开始，加个空格即可。<br>也可以只在一整段文件的第一行开始加<code>&gt;</code>,其他行省略。<br>输入两个<code>&gt; &gt;</code>表示嵌套的二级引用。引用的区块内也可以使用其他的 Markdown 语法。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; Markdown 使用 &gt; 来表示引用。把&#96;&gt;&#96;放到每一行的开始，加个空格即可。</span><br><span class="line">&gt; 也可以只在一整段文件的第一行开始加&#96;&gt;&#96;,其他行省略。</span><br><span class="line">&gt; 输入两个&#96;&gt; &gt; &#96;表示嵌套的二级引用。引用的区块内也可以使用其他的 Markdown 语法。</span><br></pre></td></tr></table></figure>

<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>Markdown 使用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来包裹代码块</p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>一行 * 号</p>
<hr>
<p>一行有空格的 * 号</p>
<hr>
<p>一行有空格的 - 号</p>
<hr>
<p>一行 _ 号</p>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line">* * * *</span><br><span class="line">- - - - 英文减号</span><br><span class="line">______  英文下划线</span><br></pre></td></tr></table></figure>


<h2 id="图片-链接-邮件"><a href="#图片-链接-邮件" class="headerlink" title="图片 链接 邮件"></a>图片 链接 邮件</h2><p><code>图片</code>行内式<br><img src="/images/Unsplash_mdxx12.jpg" alt="Unsplash" title="Bird"></p>
<hr>
<p><code>图片</code>参考式<br>![Unsplash][1]<br>[1]: images/Unsplash_mdxx12.jpg  “Bird”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;图片&#96;行内式</span><br><span class="line">![图片alt](图片地址 &quot;图片title&quot;)</span><br><span class="line">图片alt是图片的说明文字</span><br><span class="line">图片title是当鼠标移动到图片上面显示的文字。可省略。</span><br><span class="line"></span><br><span class="line">![Unsplash](&#x2F;images&#x2F;Unsplash_mdxx12.jpg &quot;Bird&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#96;图片&#96;参考式</span><br><span class="line">[图片alt][id]</span><br><span class="line">[id]: url  &quot;title&quot;</span><br><span class="line"></span><br><span class="line">![Unsplash][1]</span><br><span class="line">[1]: images&#x2F;Unsplash_mdxx12.jpg  &quot;Bird&quot;</span><br></pre></td></tr></table></figure>

<p><code>链接</code>行内式<br><a href="https://github.com/winjin" target="_blank" rel="noopener" title="github link">Github</a></p>
<p><code>链接</code>参考式<br>[Github][2]<br>[2]: <a href="https://github.com/winjin" target="_blank" rel="noopener">https://github.com/winjin</a></p>
<p><a href="https://github.com/winjin" target="_blank">github winjin</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;链接&#96;行内式</span><br><span class="line">[Github](https:&#x2F;&#x2F;github.com&#x2F;winjin &quot;github link&quot;)</span><br><span class="line"></span><br><span class="line">&#96;链接&#96;参考式</span><br><span class="line">[Github][2]</span><br><span class="line">[2]: https:&#x2F;&#x2F;github.com&#x2F;winjin</span><br><span class="line">或者</span><br><span class="line">&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;winjin&quot; target&#x3D;&quot;_blank&quot;&gt;github winjin&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure>


<h2 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h2><p>在一下符号前加 \ 可以转移一下符号</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">&#96;   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   底线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  括弧</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   惊叹号</span><br></pre></td></tr></table></figure>

<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th>th</th>
<th align="left">th</th>
<th align="right">th</th>
</tr>
</thead>
<tbody><tr>
<td>td</td>
<td align="left">td</td>
<td align="right">td</td>
</tr>
<tr>
<td>td</td>
<td align="left">td</td>
<td align="right">td</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">th | th | th </span><br><span class="line">---|:--|---:</span><br><span class="line">td | td | td</span><br><span class="line">td | td | td</span><br></pre></td></tr></table></figure>
<p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p>
<p>一个 反引号 可以标记一小段行内代码<br>三个 反引号 可以标记一段代码块</p>
]]></content>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>About Me</title>
    <url>/2020/03/20/About-Me/</url>
    <content><![CDATA[<h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><table>
  <tr>
    <td>姓名</td>
    <td>wenjin</td>
    <td>性别</td>
    <td>男</td>
    <td>现居</td>
    <td>北京</td>
  </tr>
  <tr>
    <td>专业</td>
    <td>自动化</td>
    <td>电话</td>
    <td>15311486532</td>
    <td>邮箱</td>
    <td>automaticwj@163.com</td>
  </tr>
</table>

<h2 id="技能能力"><a href="#技能能力" class="headerlink" title="技能能力"></a>技能能力</h2><ul>
<li>熟练使用 <code>php</code>，<code>html</code>，<code>css</code>，<code>javascript</code>开发 Web 应用</li>
<li>熟练使用 <code>Jquery</code>，<code>Bootstrap</code></li>
<li>简单了解 <code>Vue</code>，<code>npm</code></li>
<li>熟练使用<code>MySQL</code>数据库，以及常见配置和优化</li>
</ul>
<h2 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h2><ul>
<li>2018-03 ~ 至今       瑞友科技股份有限公司    PHP研发工程师</li>
<li>2017-03 ~ 2018-03    名远众筹(北京)资产管理有限公司    PHP开发工程师</li>
<li>2015-03 ~ 2017-03    锐达信创科技有限公司      PHP工程师<!---  + 2010-09 ~ 2015-02    Fine Silicon Co., Ltd.    DCS\PLC工程师  -->

</li>
</ul>
<h2 id="沟通执行"><a href="#沟通执行" class="headerlink" title="沟通执行"></a>沟通执行</h2><p>工作中能够虚心听取同事意见，并能够耐心与同事交流，对工作中与同事的交集部分，能够有效跟进。<br>对于领导安排的任务，有问题会及时提出自己的想法，最终能够坚持贯彻执行任务。</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/20/hello-world/</url>
    <content><![CDATA[<p>你好，世界！<br>很荣幸有机会来到这个星球。我很珍惜！很感恩！</p>
]]></content>
  </entry>
</search>
