{"meta":{"title":"King Garden","subtitle":"人生短短几个秋，何不委心任去留。沧海桑田易变迁，吾永向前誓不休。","description":"","author":"Justin","url":"http://winjin.github.io","root":"/"},"pages":[{"title":"","date":"2020-03-25T11:30:53.641Z","updated":"2020-03-24T12:37:14.436Z","comments":true,"path":"README.html","permalink":"http://winjin.github.io/README.html","excerpt":"","text":"King Garden"},{"title":"categories","date":"2020-03-25T12:24:48.855Z","updated":"2020-03-25T12:24:48.855Z","comments":true,"path":"categories/index.html","permalink":"http://winjin.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-03-25T12:26:00.000Z","updated":"2020-03-25T12:26:00.478Z","comments":true,"path":"tags/index.html","permalink":"http://winjin.github.io/tags/index.html","excerpt":"","text":""},{"title":"Gallery","date":"2020-03-25T12:37:16.606Z","updated":"2020-03-25T12:37:16.606Z","comments":true,"path":"gallery/index.html","permalink":"http://winjin.github.io/gallery/index.html","excerpt":"","text":""}],"posts":[{"title":"Bootstrap Note","slug":"Bootstrap-Note","date":"2020-04-16T11:36:03.000Z","updated":"2020-04-17T13:22:32.455Z","comments":true,"path":"2020/04/16/Bootstrap-Note/","link":"","permalink":"http://winjin.github.io/2020/04/16/Bootstrap-Note/","excerpt":"","text":"BootstrapBootstrap 简介bootsrap是基于jQuery的一款前段框架,jQuery 必须在 Bootstrap 之前引入。它需要使用HTML5的 doctype ，Bootstrap3 是以移动设备优先的。为了兼容性更好，需要加上 viewport 的 meta 标签。 基本模板123456789101112131415161718192021222324252627282930313233343536373839&lt;!DOCTYPE html&gt; &lt;!-- --&gt;&lt;html lang=\"zh-CN\"&gt; &lt;!-- 设置默认本地语言 --&gt; &lt;head&gt; &lt;!-- --&gt; &lt;meta charset=\"utf-8\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;!-- 兼容 IE edge 的 --&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt; &lt;!-- width 属性控制设备的宽度 --&gt; &lt;!-- &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt; --&gt; &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt; &lt;title&gt;Bootstrap 101 Template&lt;/title&gt; &lt;!-- Bootstrap --&gt; &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css\" rel=\"stylesheet\"&gt; &lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt; &lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt; &lt;!--[if lt IE 9]&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js\"&gt;&lt;/script&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js\"&gt;&lt;/script&gt; &lt;![endif]--&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;你好，世界！&lt;/h1&gt; &lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js\"&gt;&lt;/script&gt; &lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js\"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 全局样式1234567body &#123; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.428571429; color: #333333; background-color: #ffffff;&#125; 并且使用 Normalize.css 来初始化一些元素，保证不同浏览器的一致性。 容器主要有两个 class ：container 和 container-fluid。 容器不能相互嵌套。 123456.container &#123; padding-right: 15px; padding-left: 15px; margin-right: auto; margin-left: auto;&#125; 栅格系统 row必须放到container内。 用row创建col列。 内容应该放置在列内，且唯有列可以是行的直接子元素。 列通过内边距（padding）来创建列内容之间的间隙。该内边距是通过 .rows 上的外边距（margin）取负，表示第一列和最后一列的行偏移。 网格系统是通过指定您想要横跨的十二个可用的列来创建的。例如，要创建三个相等的列，则使用三个 .col-xs-4。 12345678&lt;div class=\"container\"&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col-*-*\"&gt;&lt;/div&gt; &lt;div class=\"col-*-*\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=\"row\"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;div class=\"container\"&gt;.... 偏移列大屏幕使用 .col-md-offset-* 这些类实现偏移。这些类会把一个列的左外边距（margin）增加 * 列，其中 * 范围是从 1 到 11。 嵌套列要嵌套列，必须先在列里面写row，然后在行里面写列。 列排序通过使用 .col-md-push-* 和 .col-md-pull-* 类就可以很容易的改变列（column）的顺序。 排版标题 &lt;h1&gt; &lt;h6&gt; 标题和 副标题 &lt;mark&gt; 用来显示高亮内容 &lt;del&gt; &lt;s&gt; 带删除线的文本 &lt;ins&gt; &lt;u&gt; 带下划线的文本 &lt;blockquote&gt; 引用文本 用于对齐方式的类： text-left text-center text-right text-justify text-nowrap 用于改变文本大小： text-lowercase text-uppercase text-capitalize 列表 作用在 ul ol 上的 list-unstyled 类用来移除着重号， list-inline 类用来把所有li放到一行内 作用在 dl 上的 dl-horizontal 类可以使 dt 和 dd 显示到一行内 text-overflow 属性可以截断列表中太长的内容 代码 &lt;kbd&gt; 标记用户通过键盘输入的内容。 &lt;code&gt; 内联显示代码 &lt;pre&gt; 块状显示代码 当使用 &lt;pre&gt; 和 &lt;code&gt; 标签时，开始和结束标签应该使用 unicode 变体： &amp;lt; 和 &amp;gt;。 .pre-scrollable 类 使 &lt;pre&gt; 元素可滚动 &lt;var&gt; 标签标记变量 &lt;samp&gt; 标签来标记程序输出的内容 表格123456789101112131415161718192021&lt;div class=\"table-responsive\"&gt; &lt;!-- 使表格变为响应式，在小屏幕可以滚动 --&gt; &lt;table class=\"table\"&gt; &lt;caption&gt;基本的表格布局&lt;/caption&gt; &lt;!-- 表格头 --&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;名称&lt;/th&gt; &lt;!-- 标题 --&gt; &lt;th&gt;城市&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Tanmay&lt;/td&gt; &lt;!-- 表格列内容 --&gt; &lt;td&gt;Bangalore&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sachin&lt;/td&gt; &lt;td&gt;Mumbai&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;&lt;/div&gt; 用在table上的类： .table基本表格 .table-striped条纹表格 .table-bordered有边框的表格 .table-hover tbody 有悬停阴影的表格 .table-condensed padding 紧凑的表格 用在tr 和 td上的类： .active .success .info .warning .danger 表单表单布局： 垂直表单（默认） 把标签和控件放在一个带有类 .form-group 的 &lt;div&gt; 中。这样可以获取最佳间距。 向所有的文本元素 &lt;input&gt;、&lt;textarea&gt; 和 &lt;select&gt; 添加类 .form-control。 默认情况下，Bootstrap 中的 input、select 和 textarea 有 100% 宽度。在使用内联表单时，您需要在表单控件上设置一个宽度。 可以通过为 label 设置 .sr-only 类将其隐藏。 内联表单 向 form 标签添加类 .form-inline 可以通过为 label 设置 .sr-only 类将其隐藏。 可以手动设置 wdith 一定要添加 label 标签 水平表单 向父 form 元素添加类 .form-horizontal。 把标签和控件放在一个带有类 .form-group 的 中。 向标签对应的 label 添加类 .control-label。 .form-group 类和 .col-- 这样的栅格类结合使用，从而使 label 和表单水平显示。 必须添加 type 属性声明 如果需要在表单中将一行纯文本和 label 元素放置于同一行，为 元素添加 .form-control-static 类即可。 要在文本输入框 &lt;input&gt; 前面、后面或是两边加上文字或按钮等，可以为 输入框组 input-group 赋予 .input-group-addon 或 .input-group-btn 类，就可以给 .form-control 的前面或后面添加额外的元素了。 复选框（CheckBoxe）和单选框（Radio）12345678910111213&lt;div class=\"checkbox disabled\"&gt; &lt;label&gt; &lt;input type=\"checkbox\" value=\"\" disabled&gt; Option two is disabled &lt;/label&gt;&lt;/div&gt;&lt;div class=\"radio disabled\"&gt; &lt;label&gt; &lt;input type=\"radio\" name=\"optionsRadios\" id=\"optionsRadios\" value=\"option\" disabled&gt; Option three is disabled &lt;/label&gt;&lt;/div&gt; 对一系列复选框和单选框使用 .checkbox-inline 或 .radio-inline class，控制它们显示在同一行上。 123456&lt;label class&#x3D;&quot;checkbox-inline&quot;&gt; &lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;inlineCheckbox1&quot; value&#x3D;&quot;option1&quot;&gt; 1&lt;&#x2F;label&gt;&lt;label class&#x3D;&quot;radio-inline&quot;&gt; &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;inlineRadioOptions&quot; id&#x3D;&quot;inlineRadio1&quot; value&#x3D;&quot;option1&quot;&gt; 1&lt;&#x2F;label&gt; 下拉列表（select） select 标签也使用 .form-control 类。可多选需要设置 multiple 属性。 只需要对父元素简单地添加适当的 class（.has-warning、 .has-error 或 .has-success）即可显示对应的验证样式。 .has-feedback 类 对应的反馈图标（feedback icon）只能使用在文本输入框 &lt;input class=&quot;form-control&quot;&gt; 元素上。 控件的尺寸通过 .input-lg 类似的类设置高度，通过 .col-lg-* 类似的类设置宽度。 按钮&lt;a&gt;、&lt;button&gt; 或 &lt;input&gt; 元素添加按钮类，都可以作为 button 使用。使用 .btn-lg、.btn-sm 或 .btn-xs 来改变按钮的尺寸。使用 .active、.disabled 为 a 标签类型的按钮改变状态，使用 disabled、 opacity 属性给 button 标签改变状态 1234567891011121314151617181920&lt;!-- Standard button --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-default&quot;&gt;（默认样式）Default&lt;&#x2F;button&gt;&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot;&gt;（首选项）Primary&lt;&#x2F;button&gt;&lt;!-- Indicates a successful or positive action --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-success&quot;&gt;（成功）Success&lt;&#x2F;button&gt;&lt;!-- Contextual button for informational alert messages --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-info&quot;&gt;（一般信息）Info&lt;&#x2F;button&gt;&lt;!-- Indicates caution should be taken with this action --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-warning&quot;&gt;（警告）Warning&lt;&#x2F;button&gt;&lt;!-- Indicates a dangerous or potentially negative action --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger&quot;&gt;（危险）Danger&lt;&#x2F;button&gt;&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt;&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-link&quot;&gt;（链接）Link&lt;&#x2F;button&gt; 图片为图片添加 .img-responsive 类可以让图片支持响应式布局。让使用了 .img-responsive 类的图片水平居中，使用 .center-block 类。img 标签有三个类可以改变图片形状： - .img-rounded：添加 border-radius:6px 来获得图像圆角。 - .img-circle：添加 border-radius:500px 来让整个图像变成圆形。 - .img-thumbnail：添加一些内边距（padding）和一个灰色的边框。 组件Glyphicons 字体图标字形图标（Glyphicons）是在 Web 项目中使用的图标字体。&lt;span class=&quot;glyphicon glyphicon-user&quot;&gt;&lt;/span&gt; glyphicon-user 就是要使用的具体图标的名字 12345678910111213141516171819@font-face &#123; font-family: &#39;Glyphicons Halflings&#39;; src: url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.eot&#39;); &#x2F;* 图标字体的位置 *&#x2F; src: url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;), url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.woff&#39;) format(&#39;woff&#39;), url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.ttf&#39;) format(&#39;truetype&#39;), url(&#39;..&#x2F;fonts&#x2F;glyphicons-halflings-regular.svg#glyphicons_halflingsregular&#39;) format(&#39;svg&#39;);&#125; .glyphicon &#123; position: relative; top: 1px; display: inline-block; font-family: &#39;Glyphicons Halflings&#39;; -webkit-font-smoothing: antialiased; font-style: normal; font-weight: normal; line-height: 1; -moz-osx-font-smoothing: grayscale;&#125;...... 下拉菜单 Dropdown12345678910111213141516&lt;div class&#x3D;&quot;dropdown&quot;&gt; &#x2F;* fropdown 向下弹出菜单， dropup 向上弹出菜单 *&#x2F; &lt;button class&#x3D;&quot;btn btn-default dropdown-toggle&quot; type&#x3D;&quot;button&quot; id&#x3D;&quot;dropdownMenu1&quot; data-toggle&#x3D;&quot;dropdown&quot; aria-haspopup&#x3D;&quot;true&quot; aria-expanded&#x3D;&quot;true&quot;&gt; Dropdown &lt;span class&#x3D;&quot;caret&quot;&gt;&lt;&#x2F;span&gt; &lt;&#x2F;button&gt; &lt;ul class&#x3D;&quot;dropdown-menu&quot; aria-labelledby&#x3D;&quot;dropdownMenu1&quot;&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Another action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li class&#x3D;&quot;dropdown-header&quot;&gt;Dropdown header&lt;&#x2F;li&gt; &#x2F;* 标题分组 *&#x2F; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Something else here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li role&#x3D;&quot;separator&quot; class&#x3D;&quot;divider&quot;&gt;&lt;&#x2F;li&gt; &lt;li role&#x3D;&quot;separator&quot; class&#x3D;&quot;divider&quot;&gt;&lt;&#x2F;li&gt; &#x2F;* 分割线 *&#x2F; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Separated link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li class&#x3D;&quot;disabled&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Disabled link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &#x2F;* 禁用的菜单项 *&#x2F; &lt;&#x2F;ul&gt;&lt;&#x2F;div&gt; 按钮组 .btn-group 用于形成基本的按钮组。在 .btn-group 中放置一系列带有.btn 的按钮。 按钮工具栏就是把一组 放进一个 中。 给 .btn-group 加上 .btn-group-* 类，可以修改按钮组尺寸。 把 .btn-group 放入另一个 .btn-group 中，可以把列表嵌套到后一个 .btn-group。 btn-group-vertical 类可以让按钮组垂直排序。 按钮式下拉菜单在一个 .btn-group 中放置按钮和下拉菜单即可 1234567891011121314&lt;div class&#x3D;&quot;btn-group&quot;&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger&quot;&gt;Action&lt;&#x2F;button&gt; &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-danger dropdown-toggle&quot; data-toggle&#x3D;&quot;dropdown&quot; aria-haspopup&#x3D;&quot;true&quot; aria-expanded&#x3D;&quot;false&quot;&gt; &lt;span class&#x3D;&quot;caret&quot;&gt;&lt;&#x2F;span&gt; &lt;span class&#x3D;&quot;sr-only&quot;&gt;Toggle Dropdown&lt;&#x2F;span&gt; &lt;&#x2F;button&gt; &lt;ul class&#x3D;&quot;dropdown-menu&quot;&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Another action&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Something else here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li role&#x3D;&quot;separator&quot; class&#x3D;&quot;divider&quot;&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Separated link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;&#x2F;ul&gt;&lt;&#x2F;div&gt; 输入框组向 .form-control 类的 input 文本输入框的前或后添加前缀后缀的步骤如下： 把有 .form-control 类的 input 标签放到类 .input-group 的 中。 在此 input 的前或者后放一个 span 标签，为此 span 加 .input-group-addon 类。 在 span 内写上要加的前后缀。 导航导航组件都依赖同一个 .nav 类，状态类也是共用的。在标签页上使用导航需要依赖 JavaScript 标签页插件 1234567891011121314&lt;ul class&#x3D;&quot;nav nav-tabs nav-justified&quot;&gt; &lt;li class&#x3D;&quot;active&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Home&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;SVN&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;iOS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;VB.Net&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Java&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;PHP&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;ul class&#x3D;&quot;nav nav-pills nav-justified&quot;&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;iOS&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;VB.Net&lt;&#x2F;a&gt;&lt;&#x2F;li&gt; ... &lt;li role&#x3D;&quot;presentation&quot; class&#x3D;&quot;disabled&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;Disabled link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt; 分页标签徽章给链接、导航等元素嵌套 元素，可以很醒目的展示新的或未读的信息条目。 巨幕12345&lt;div class&#x3D;&quot;jumbotron&quot;&gt; &lt;h1&gt;Hello, world!&lt;&#x2F;h1&gt; &lt;p&gt;...&lt;&#x2F;p&gt; &lt;p&gt;&lt;a class&#x3D;&quot;btn btn-primary btn-lg&quot; href&#x3D;&quot;#&quot; role&#x3D;&quot;button&quot;&gt;Learn more&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt; 警告框使用 .alert 类， alert-success alert-info alert-warning alert-danger .alert-dismissible 使警告框可关闭。 用 .alert-link 工具类，可以为链接设置与当前警告框相符的颜色。 进度条创建一个进度条： 添加一个 .progress 的 。在此 内，添加一个带有 .progress-bar 的 。给此 div 添加一个 style 属性，例如 style=”60%”; 表示进度条在 60% 的位置。 123456&lt;div class&#x3D;&quot;progress&quot;&gt; &lt;div class&#x3D;&quot;progress-bar&quot; role&#x3D;&quot;progressbar&quot; aria-valuenow&#x3D;&quot;60&quot; aria-valuemin&#x3D;&quot;0&quot; aria-valuemax&#x3D;&quot;100&quot; style&#x3D;&quot;width: 60%;&quot;&gt; &lt;span class&#x3D;&quot;sr-only&quot;&gt;60% Complete&lt;&#x2F;span&gt; &lt;!-- 隐藏进度数字 --&gt; 60% Complete &lt;!-- 显示进度数字 --&gt; &lt;&#x2F;div&gt;&lt;&#x2F;div&gt; progress-bar-success progress-bar-info … 改变进度条颜色progress-bar-striped 进度条带条纹， progress-bar-striped active 带动画效果 面版123456789&lt;div class&#x3D;&quot;panel panel-default&quot;&gt; &lt;!-- 必须的 --&gt; &lt;div class&#x3D;&quot;panel-heading&quot;&gt; &lt;h3 class&#x3D;&quot;panel-title&quot;&gt;Panel title&lt;&#x2F;h3&gt; &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;panel-body&quot;&gt; &lt;!-- 必须的 --&gt; Panel content &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;panel-footer&quot;&gt;Panel footer&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;","categories":[],"tags":[]},{"title":"vue note","slug":"vue-note","date":"2020-04-08T07:31:20.000Z","updated":"2020-04-09T12:11:57.885Z","comments":true,"path":"2020/04/08/vue-note/","link":"","permalink":"http://winjin.github.io/2020/04/08/vue-note/","excerpt":"","text":"Vue安装 直接下载并使用&lt;script&gt;标签引入，Vue会被注册为一个全局变量。 或者使用npm安装，执行npm install vue 安装最新稳定版。 简介Vue的是个渐进式的前端框架。页面上的数据和DOM是响应式的，也即双向绑定的。学习Vue，不要想jQuery，要回来学习JavaScript。 Vue 实例一个 Vue 应用由一个通过 new Vue 创建的根 Vue 实例，以及可选的嵌套的、可复用的组件树组成。 1234var vm &#x3D; new Vue(&#123; &#x2F;&#x2F; 选项属性 ... &#125;) vm 是 ViewModel 的缩写，常用来表示 Vue 实例， 这个实例也叫选项对象。 模板语法","categories":[],"tags":[]},{"title":"favicon note","slug":"favicon-note","date":"2020-03-27T11:49:02.000Z","updated":"2020-03-27T11:58:23.101Z","comments":true,"path":"2020/03/27/favicon-note/","link":"","permalink":"http://winjin.github.io/2020/03/27/favicon-note/","excerpt":"","text":"favicon 是 favorite icon 的缩写。也就是出现在浏览器书签中网站名左边的那个小图标。有的还会出现在地址栏 URL 的左边。 一般都会被命名为 favicon.ico 以下是一些常见的用法： 123&lt;link rel=\"shortcut icon\" href=\"/src/iamges/favicon.ico&gt;&lt;link rel=\"icon\" href=\"/src/iamges/favicon.png&gt;","categories":[],"tags":[]},{"title":"Computer Config","slug":"Computer-Config","date":"2020-03-24T12:00:04.000Z","updated":"2020-03-24T12:02:07.820Z","comments":true,"path":"2020/03/24/Computer-Config/","link":"","permalink":"http://winjin.github.io/2020/03/24/Computer-Config/","excerpt":"","text":"——–[ 概览 ]———————————————————————————- 电脑型号 联想 ThinkPad E550c 笔记本电脑 操作系统 Windows 10 64位 ( DirectX 12 ) 处理器 英特尔 第四代酷睿 i5-4210U 双核 主板 联想 20E0A00YCD ( Lynx Point-LP ) 显卡 AMD Radeon R7 M265 Series ( 2 GB ) 内存 4 GB ( 记忆科技 DDR3L 1600MHz ) 主硬盘 希捷 ST500LM021-1KJ152 ( 500 GB / 7200 转/分 ) 显示器 联想 LEN40B0 ( 15.5 英寸 ) 声卡 Conexant SmartAudio HD @ 英特尔 Lynx Point-LP 高保真音频 网卡 英特尔 Ethernet Connection I218-V / 联想 ——–[ 主板 ]———————————————————————————- 主板型号 联想 20E0A00YCD 芯片组 Lynx Point-LP 序列号 L1HF5AC0145 主板版本 SDK0K09938 WIN BIOS版本 联想 J5ET48WW (1.19 ) / BIOS程序发布日期: 08/27/2015 BIOS的大小 16384 KB ——–[ 处理器 ]——————————————————————————– 处理器 英特尔 第四代酷睿 i5-4210U 双核 速度 2.40 GHz (100 MHz x 24.0) 处理器数量 核心数: 2 / 线程数: 4 核心代号 Haswell 生产工艺 22.0纳米 插槽/插座 BGA1168 一级数据缓存 2 x 32 KB, 8-Way, 64 byte lines 一级代码缓存 2 x 32 KB, 8-Way, 64 byte lines 二级缓存 2 x 256 KB, 8-Way, 64 byte lines 三级缓存 3 MB, 12-Way, 64 byte lines 特征 MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, HTT, EM64T, EIST, Turbo Boost ——–[ 硬盘 ]———————————————————————————- 产品 希捷 ST500LM021-1KJ152 大小 500 GB 转速 7200 转/分 缓存 32 MB 硬盘已使用 共 1963 次，累计 6523 小时 固件 0002LIM1 接口 SATA III 数据传输率 600.00 MB/秒 特征 S.M.A.R.T, APM, 48-bit LBA, NCQ ——–[ 内存 ]———————————————————————————- ChannelA-DIMM0 记忆科技 DDR3L 1600MHz 4GB 制造日期 2015 年 37 周 型号 7F7F7F7F43 RMT3170ME68F9F1600 序列号 43739109 厂商 Ramaxel 模块位宽: 64 Bits 模块电压: SSTL 1.35V ——–[ 显卡 ]———————————————————————————- 显卡 英特尔 Haswell-ULT Integrated Graphics Controller 显存 112 MB 制造商 联想 制造商 Intel BIOS日期 10/16/20 (非显卡制造日期) 驱动版本 20.19.15.4568 驱动日期 20161216 主显卡 AMD Radeon R7 M265 Series 显存 2 GB 频率 核心: 825MHz / 显存: 1000MHz 制造商 AMD BIOS版本 BR45429.001 BIOS日期 10/16/20 (非显卡制造日期) 驱动版本 22.19.180.1536 驱动日期 12-27-2017 ——–[ 显示器 ]——————————————————————————– 产品 联想 LEN40B0 厂商 联想 固件程序日期 2013 年 41 周 (非显示器制造日期) 屏幕尺寸 15.5 英寸 (34 厘米 x 19 厘米) 显示比例 宽屏 16 : 9 分辨率 1366 x 768 32 位真彩色 Gamma 2.20 电源管理 Standby, Suspend, Active-Off 最大分辨率 1366 x 768 ——–[ 其他设备 ]—————————————————————————— 网卡 英特尔 Ethernet Connection I218-V 制造商 联想 无线网卡 瑞昱 Realtek RTL8723BE Wireless LAN 802.11n PCI-E NIC 制造商 联想 声卡 Conexant SmartAudio HD @ 英特尔 Lynx Point-LP 高保真音频 键盘 PS/2 标准键盘 鼠标 ThinkPad UltraNav 鼠标 HID-compliant 鼠标 摄像头 Intel(R) RealSense(TM) 3D Camera Virtual Driver ——–[ PCI设备 ]——————————————————————————- 设备 Haswell-ULT DRAM Controller 设备ID 0A04 制造商 Intel 制造商ID 8086 类别 Bridge / PCI to HOST 子系统制造商 Lenovo 子系统ID 502017AA 设备 Haswell-ULT Integrated Graphics Controller 设备ID 0A16 制造商 Intel 制造商ID 8086 类别 Display / VGA 子系统制造商 Lenovo 子系统ID 502117AA 设备 Lynx Point-LP USB xHCI HC 设备ID 9C31 制造商 Intel 制造商ID 8086 类别 Serial / USB (UHCI) 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP HECI #0 设备ID 9C3A 制造商 Intel 制造商ID 8086 类别 Simple Communication / Other 子系统制造商 Lenovo 子系统ID 502017AA 设备 Ethernet Connection I218-V 设备ID 1559 制造商 Intel 制造商ID 8086 类别 Network / Ethernet 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP HD Audio Controller 设备ID 9C20 制造商 Intel 制造商ID 8086 类别 Multimedia / Hi-definition Audio 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP PCI Express Root Port 1 设备ID 9C10 制造商 Intel 制造商ID 8086 类别 Bridge / PCI to PCI 子系统ID 00000000 设备 Lynx Point-LP PCI Express Root Port 3 设备ID 9C14 制造商 Intel 制造商ID 8086 类别 Bridge / PCI to PCI 子系统ID 00000000 设备 Lynx Point-LP PCI Express Root Port 5 设备ID 9C18 制造商 Intel 制造商ID 8086 类别 Bridge / PCI to PCI 子系统ID 00000000 设备 Lynx Point-LP PCI Express Root Port 6 设备ID 9C1A 制造商 Intel 制造商ID 8086 类别 Bridge / PCI to PCI 子系统ID 00000000 设备 Lynx Point-LP USB EHCI #1 设备ID 9C26 制造商 Intel 制造商ID 8086 类别 Serial / USB 2.0 (EHCI) 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP LPC Controller 设备ID 9C43 制造商 Intel 制造商ID 8086 类别 Bridge / PCI to ISA 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP SATA Controller 1 [AHCI mode] 设备ID 9C03 制造商 Intel 制造商ID 8086 类别 Storage / Serial ATA (AHCI 1.0) 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP SMBus Controller 设备ID 9C22 制造商 Intel 制造商ID 8086 类别 Serial / SMBus Controller 子系统制造商 Lenovo 子系统ID 502017AA 设备 Lynx Point-LP Thermal 设备ID 9C24 制造商 Intel 制造商ID 8086 类别 Data Aquisition &amp; Signal Processing / Other 子系统制造商 Lenovo 子系统ID 502017AA 设备 Realtek RTL8723BE Wireless LAN 802.11n PCI-E NIC 设备ID B723 制造商 Realtek 制造商ID 10EC 类别 Network / Other 子系统制造商 Lenovo 子系统ID B73617AA 设备 Realtek PCIE CardReader 设备ID 5227 制造商 Realtek 制造商ID 10EC 类别 / 子系统制造商 Lenovo 子系统ID 502017AA ——–[ USB设备 ]——————————————————————————- 制造商ID 0BDA 产品ID B728 类别 224 / 1 / 1 设备 制造商ID 8086 产品ID 0A66 类别 239 / 2 / 1 设备 版本 USB 3.0 制造商ID 0461 产品ID 4D22 类别 0 / 0 / 0 设备 ? USB Optical Mouse Serial ? 版本 USB 2.0","categories":[],"tags":[]},{"title":"Hexo note","slug":"Hexo-note","date":"2020-03-23T11:36:03.000Z","updated":"2020-03-25T11:37:31.751Z","comments":true,"path":"2020/03/23/Hexo-note/","link":"","permalink":"http://winjin.github.io/2020/03/23/Hexo-note/","excerpt":"","text":"HexoHexo 建站Hexo是一个博客框架，默认使用Markdown作为引擎解析文章，生成静态 html 文件。安装 hexo 之前需要安装有 Node.js 和 Git。 12$ npm install -g hexo-cli &#x2F;&#x2F; 全局安装 hexo$ npm install hexo &#x2F;&#x2F; 局部安装 hexo 1$ hexo version &#x2F;&#x2F; 显示 hexo 版本信息 使用 hexo 命令建站 123$ hexo init &lt;folder&gt; &#x2F;&#x2F; 这个 folder 就是站点的开始的文件夹$ cd &lt;folder&gt;$ npm install 之后你可以看到一些目录和文件,主要有： 12345678910├── scaffolds├── source| └── _posts| └── images├── public| └── _posts| └── images├── themes├── _config.yml├── package.json source\\_posts\\ 这个目录下就是你新建的 MD 文件的存放目录。_config.yml是配置文件，里面有关于此站点的所有设置。 常用命令使用 hexo init就可以在当前的目录新建一个站点了，及时不设置_config.yml文件，也是可以开始写文章的。默认有个 hello world 的模板。可以直接建.md文件或者使用命令 123$ hexo new [layout] &lt;title&gt; &#x2F;&#x2F; 默认式 post 布局$ hexo new &quot;About me&quot;$ hexo new &quot;Markdown List&quot; 如果使用了其他布局，之后需要用hexo publish [layout] &lt;title&gt;命令，把文章发布到 post 布局 本地调试1$ hexo server 部署到 github打开_config.yml文件，在 deploy 部分做配置： 123type: gitrepository: https:&#x2F;&#x2F;github.com&#x2F;winjin&#x2F;winjin.github.iobranch: master 然后执行命令：npm install hexo-deployer-git --save再执行命令：hexo deploy由于没有使用 SSH 所以上条命令执行过程中需要输入你 github 的用户名和密码，然后 github pages 就可以用了。 到目前为止，虽然，主题没有设置，一些配置没有更改，但是基本可以使用了。以后写文章到部署到线上，大致会是这样一个过程： 123456hexo new &quot;article name&quot; &#x2F;&#x2F; 新建一个 .md 文件使用编辑器打开 article-name.md 写你的文章hexo server &#x2F;&#x2F; 开启本地服务，查看调试效果hexo clean &#x2F;&#x2F; 会把 public 目录清空hexo generate &#x2F;&#x2F; 生成静态文件hexo deploy &#x2F;&#x2F; 部署到 github 又需要输入 username 和 password，除非使用你 SSH","categories":[],"tags":[]},{"title":"Markdown List","slug":"Markdown-List","date":"2020-03-20T10:58:53.000Z","updated":"2020-03-25T11:01:41.719Z","comments":true,"path":"2020/03/20/Markdown-List/","link":"","permalink":"http://winjin.github.io/2020/03/20/Markdown-List/","excerpt":"","text":"基本语法字体 正常字体 斜体 斜体 加粗 删除线 12345无*斜体* _斜体_**加粗** ***斜体加粗***~~删除线~~ 标题一级标题二级标题三级标题四级标题五级标题六级标题123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 邮件&#97;&#117;&#x74;&#111;&#109;&#x61;&#116;&#x69;&#x63;&#x77;&#x6a;&#x40;&#x31;&#x36;&#51;&#x2e;&#x63;&#x6f;&#109; 无、有序列表无序列表 此字左边的-和几个空格 此字左边的+和几个空格 此字左边的*和几个空格 123- 此字左边的-和几个空格+ 此字左边的+和几个空格* 此字左边的*和几个空格 有序列表 1.此字左边的1和.3. 此字左边的2和.5. 此字左边的3和点 1231.此字左边的1和.3. 此字左边的2和.5. 此字左边的3和点 列表嵌套 上一级和下一级之间输入三个空格 一级A 二级A 二级B 二级C 三级A 三级B 三级C 一级B 一级C 还是二级A 还是二级C 1234567891011+ 一级A 1. 二级A 8. 二级B 3. 二级C - 三级A - 三级B * 三级C- 一级B- 一级C + 还是二级A - 还是二级C 引用 Markdown 使用 &gt; 来表示引用。把&gt;放到每一行的开始，加个空格即可。也可以只在一整段文件的第一行开始加&gt;,其他行省略。输入两个&gt; &gt;表示嵌套的二级引用。引用的区块内也可以使用其他的 Markdown 语法。 123&gt; Markdown 使用 &gt; 来表示引用。把&#96;&gt;&#96;放到每一行的开始，加个空格即可。&gt; 也可以只在一整段文件的第一行开始加&#96;&gt;&#96;,其他行省略。&gt; 输入两个&#96;&gt; &gt; &#96;表示嵌套的二级引用。引用的区块内也可以使用其他的 Markdown 语法。 代码块Markdown 使用 &lt;pre&gt; 和 &lt;code&gt; 标签来包裹代码块 分割线一行 * 号 一行有空格的 * 号 一行有空格的 - 号 一行 _ 号 1234****** * * *- - - - 英文减号______ 英文下划线 图片 链接 邮件图片行内式 图片参考式![Unsplash][1][1]: images/Unsplash_mdxx12.jpg “Bird” 1234567891011121314&#96;图片&#96;行内式![图片alt](图片地址 &quot;图片title&quot;)图片alt是图片的说明文字图片title是当鼠标移动到图片上面显示的文字。可省略。![Unsplash](&#x2F;images&#x2F;Unsplash_mdxx12.jpg &quot;Bird&quot;)&#96;图片&#96;参考式[图片alt][id][id]: url &quot;title&quot;![Unsplash][1][1]: images&#x2F;Unsplash_mdxx12.jpg &quot;Bird&quot; 链接行内式Github 链接参考式[Github][2][2]: https://github.com/winjin github winjin 12345678&#96;链接&#96;行内式[Github](https:&#x2F;&#x2F;github.com&#x2F;winjin &quot;github link&quot;)&#96;链接&#96;参考式[Github][2][2]: https:&#x2F;&#x2F;github.com&#x2F;winjin或者&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;github.com&#x2F;winjin&quot; target&#x3D;&quot;_blank&quot;&gt;github winjin&lt;&#x2F;a&gt; 转义在一下符号前加 \\ 可以转移一下符号 123456789101112\\ 反斜线&#96; 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 表格 th th th td td td td td td 1234th | th | th ---|:--|---:td | td | tdtd | td | td -: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。 一个 反引号 可以标记一小段行内代码三个 反引号 可以标记一段代码块","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://winjin.github.io/tags/Markdown/"}]},{"title":"About Me","slug":"About-Me","date":"2020-03-20T10:43:57.000Z","updated":"2020-03-27T12:13:48.004Z","comments":true,"path":"2020/03/20/About-Me/","link":"","permalink":"http://winjin.github.io/2020/03/20/About-Me/","excerpt":"","text":"基本信息 姓名 wenjin 性别 男 现居 北京 专业 自动化 电话 15311486532 邮箱 automaticwj@163.com 技能能力 熟练使用 php，html，css，javascript开发 Web 应用 熟练使用 Jquery，Bootstrap 简单了解 Vue，npm 熟练使用MySQL数据库，以及常见配置和优化 工作经历 2018-03 ~ 至今 瑞友科技股份有限公司 PHP研发工程师 2017-03 ~ 2018-03 名远众筹(北京)资产管理有限公司 PHP开发工程师 2015-03 ~ 2017-03 锐达信创科技有限公司 PHP工程师 沟通执行工作中能够虚心听取同事意见，并能够耐心与同事交流，对工作中与同事的交集部分，能够有效跟进。对于领导安排的任务，有问题会及时提出自己的想法，最终能够坚持贯彻执行任务。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-03-20T10:23:06.587Z","updated":"2020-03-23T11:34:27.901Z","comments":true,"path":"2020/03/20/hello-world/","link":"","permalink":"http://winjin.github.io/2020/03/20/hello-world/","excerpt":"","text":"你好，世界！很荣幸有机会来到这个星球。我很珍惜！很感恩！","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://winjin.github.io/tags/Markdown/"}]}